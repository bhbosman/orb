// Code generated by me. DO NOT EDIT.

package omg

import __fmt__ "fmt"
import __goidl__ "github.com/bhbosman/goidl"
import __json__ "encoding/json"
import __reflect__ "reflect"
import __yaccidl__ "github.com/bhbosman/yaccidl"

// TypeDef declaration: "CosCollection::AnySequence", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CosCollection::AnySequence
type CosCollectionAnySequence []__goidl__.IdlAny

//noinspection GoSnakeCaseUsage
type CosCollectionAnySequence_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionAnySequenceId_Const = "IDL:omg.org/CosCollection/AnySequence:1.0"

func (self CosCollectionAnySequence_Helper) Id() string {
	return CosCollectionAnySequenceId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CosCollectionAnySequence_Helper) Read(stream __goidl__.IReadAny) (CosCollectionAnySequence, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CosCollectionAnySequence, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = __goidl__.IdlAnyHelper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CosCollectionAnySequence_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionAnySequence) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = __goidl__.IdlAnyHelper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// TypeDef declaration: "CosCollection::Istring", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CosCollection::Istring" from: "string"
type CosCollectionIstring string

//noinspection GoSnakeCaseUsage
type CosCollectionIstring_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionIstringId_Const = "IDL:omg.org/CosCollection/Istring:1.0"

func (self CosCollectionIstring_Helper) Id() string {
	return CosCollectionIstringId_Const
}

func (self CosCollectionIstring_Helper) Read(stream __goidl__.IReadAny) (string, error) {
	result, err := __goidl__.IdlStringHelper.Read(stream)
	return result, err
}

func (self CosCollectionIstring_Helper) Write(stream __goidl__.IWriteAny, v string) error {
	return __goidl__.IdlStringHelper.Write(stream, v)
}

// Struct declaration: "CosCollection::NVPair", generatedBy by: "WriteStructDcl"
// Exception Decl: false
type CosCollectionNVPair struct {
	__goidl__.IdlObject
	Name string `json:"Name"`
	Value __goidl__.IdlAny `json:"Value"`
}

//noinspection GoSnakeCaseUsage
const CosCollectionNVPairId_Const = "IDL:omg.org/CosCollection/NVPair:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosCollectionNVPair() *CosCollectionNVPair {
	//noinspection GoRedundantConversion
	return &CosCollectionNVPair{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionNVPairId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "name", Type: "CosCollection::Istring" Scope: "IdlTypedef"
		Name: "",
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "value", Type: "IdlAny" Scope: "AnyType"
		Value: nil,
	}
}

//noinspection GoUnusedExportedFunction
func NewCosCollectionNVPair(
	//"StructDclAllParamsConstructorParamService"
	Name string,
	//"StructDclAllParamsConstructorParamService"
	Value __goidl__.IdlAny) *CosCollectionNVPair {
	//noinspection GoRedundantConversion
	return &CosCollectionNVPair{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionNVPairId_Const,
		},
		Name: Name,
		Value: Value,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosCollectionNVPair(randomGenerator __goidl__.IRandomDataGenerator) *CosCollectionNVPair {
	//noinspection GoRedundantConversion
	return &CosCollectionNVPair{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionNVPairId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "name", Type: "CosCollection::Istring" Scope: "IdlTypedef"
		Name: randomGenerator.StringTypeValue(__reflect__.TypeOf((*CosCollectionNVPair)(nil)), "Name"),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "value", Type: "IdlAny" Scope: "AnyType"
		Value: randomGenerator.AnyTypeValue(__reflect__.TypeOf((*CosCollectionNVPair)(nil)), "Value"),
	}
}

func (self *CosCollectionNVPair) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosCollectionNVPair) GoString() string {
	return self.String()
}

func (self *CosCollectionNVPair) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(StringType)
	self.Name, err = __goidl__.IdlStringHelper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(AnyType)
	self.Value, err = __goidl__.IdlAnyHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionNVPair) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionNVPair) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(StringType)
	err = __goidl__.IdlStringHelper.Write(stream, self.Name)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(AnyType)
	err = __goidl__.IdlAnyHelper.Write(stream, self.Value)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosCollectionNVPair_Helper struct {
}

// TypeDef declaration: "CosCollection::ParameterList", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CosCollection::ParameterList
type CosCollectionParameterList []*CosCollectionNVPair

//noinspection GoSnakeCaseUsage
type CosCollectionParameterList_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionParameterListId_Const = "IDL:omg.org/CosCollection/ParameterList:1.0"

func (self CosCollectionParameterList_Helper) Id() string {
	return CosCollectionParameterListId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CosCollectionParameterList_Helper) Read(stream __goidl__.IReadAny) (CosCollectionParameterList, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CosCollectionParameterList, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i] = NewDefaultCosCollectionNVPair()
			err = result[i].Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CosCollectionParameterList_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionParameterList) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = item.Write(stream)
		if err != nil {
			return err
		}
	}
	return err
}

// Exception declaration: "CosCollection::EmptyCollection", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosCollectionEmptyCollection struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CosCollectionEmptyCollectionId_Const = "IDL:omg.org/CosCollection/EmptyCollection:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosCollectionEmptyCollection() *CosCollectionEmptyCollection {
	//noinspection GoRedundantConversion
	return &CosCollectionEmptyCollection{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionEmptyCollectionId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCosCollectionEmptyCollection() *CosCollectionEmptyCollection {
	//noinspection GoRedundantConversion
	return &CosCollectionEmptyCollection{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionEmptyCollectionId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosCollectionEmptyCollection() *CosCollectionEmptyCollection {
	//noinspection GoRedundantConversion
	return &CosCollectionEmptyCollection{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionEmptyCollectionId_Const,
		},
	}
}

func (self *CosCollectionEmptyCollection) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosCollectionEmptyCollection) Error() string{
	return 	__fmt__.Sprintf("Error of type CosCollectionEmptyCollection(%v)", self.String())
}
func (self *CosCollectionEmptyCollection) GoString() string {
	return self.String()
}

func (self *CosCollectionEmptyCollection) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionEmptyCollection) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionEmptyCollection) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosCollectionEmptyCollection_Helper struct {
}

// Exception declaration: "CosCollection::PositionInvalid", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosCollectionPositionInvalid struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CosCollectionPositionInvalidId_Const = "IDL:omg.org/CosCollection/PositionInvalid:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosCollectionPositionInvalid() *CosCollectionPositionInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionPositionInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionPositionInvalidId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCosCollectionPositionInvalid() *CosCollectionPositionInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionPositionInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionPositionInvalidId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosCollectionPositionInvalid() *CosCollectionPositionInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionPositionInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionPositionInvalidId_Const,
		},
	}
}

func (self *CosCollectionPositionInvalid) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosCollectionPositionInvalid) Error() string{
	return 	__fmt__.Sprintf("Error of type CosCollectionPositionInvalid(%v)", self.String())
}
func (self *CosCollectionPositionInvalid) GoString() string {
	return self.String()
}

func (self *CosCollectionPositionInvalid) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionPositionInvalid) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionPositionInvalid) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosCollectionPositionInvalid_Helper struct {
}

// Enum declaration: "CosCollection::IteratorInvalidReason", generatedBy by: "WriteEnumDcl"
type CosCollectionIteratorInvalidReason uint32

//noinspection GoUnusedConst
const (
	CosCollectionIteratorInvalidReasonIsInvalid          CosCollectionIteratorInvalidReason = 0
	CosCollectionIteratorInvalidReasonIsNotForCollection CosCollectionIteratorInvalidReason = 1
	CosCollectionIteratorInvalidReasonIsConst            CosCollectionIteratorInvalidReason = 2
)

//noinspection GoSnakeCaseUsage
type CosCollectionIteratorInvalidReason_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionIteratorInvalidReasonId_Const = "IDL:omg.org/CosCollection/IteratorInvalidReason:1.0"

func (self CosCollectionIteratorInvalidReason_Helper) Id() string {
	return CosCollectionIteratorInvalidReasonId_Const
}

func (self CosCollectionIteratorInvalidReason_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CosCollectionIteratorInvalidReason_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// Exception declaration: "CosCollection::IteratorInvalid", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosCollectionIteratorInvalid struct {
	__goidl__.IdlObject
	Why uint32 `json:"Why"`
}

//noinspection GoSnakeCaseUsage
const CosCollectionIteratorInvalidId_Const = "IDL:omg.org/CosCollection/IteratorInvalid:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosCollectionIteratorInvalid() *CosCollectionIteratorInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionIteratorInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionIteratorInvalidId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "why", Type: "CosCollection::IteratorInvalidReason" Scope: "IdlEnum"
		Why: 0,
	}
}

//noinspection GoUnusedExportedFunction
func NewCosCollectionIteratorInvalid(
	//"StructDclAllParamsConstructorParamService"
	Why uint32) *CosCollectionIteratorInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionIteratorInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionIteratorInvalidId_Const,
		},
		Why: Why,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosCollectionIteratorInvalid(randomGenerator __goidl__.IRandomDataGenerator) *CosCollectionIteratorInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionIteratorInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionIteratorInvalidId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "why", Type: "CosCollection::IteratorInvalidReason" Scope: "IdlEnum"
		Why: randomGenerator.EnumTypeValue(__reflect__.TypeOf((*CosCollectionIteratorInvalid)(nil)), "Why"),
	}
}

func (self *CosCollectionIteratorInvalid) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosCollectionIteratorInvalid) Error() string{
	return 	__fmt__.Sprintf("Error of type CosCollectionIteratorInvalid(%v)", self.String())
}
func (self *CosCollectionIteratorInvalid) GoString() string {
	return self.String()
}

func (self *CosCollectionIteratorInvalid) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlEnum)
	self.Why, err = __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionIteratorInvalid) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionIteratorInvalid) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlEnum)
	err = __goidl__.IdlUInt32Helper.Write(stream, self.Why)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosCollectionIteratorInvalid_Helper struct {
}

// Exception declaration: "CosCollection::IteratorInBetween", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosCollectionIteratorInBetween struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CosCollectionIteratorInBetweenId_Const = "IDL:omg.org/CosCollection/IteratorInBetween:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosCollectionIteratorInBetween() *CosCollectionIteratorInBetween {
	//noinspection GoRedundantConversion
	return &CosCollectionIteratorInBetween{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionIteratorInBetweenId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCosCollectionIteratorInBetween() *CosCollectionIteratorInBetween {
	//noinspection GoRedundantConversion
	return &CosCollectionIteratorInBetween{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionIteratorInBetweenId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosCollectionIteratorInBetween() *CosCollectionIteratorInBetween {
	//noinspection GoRedundantConversion
	return &CosCollectionIteratorInBetween{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionIteratorInBetweenId_Const,
		},
	}
}

func (self *CosCollectionIteratorInBetween) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosCollectionIteratorInBetween) Error() string{
	return 	__fmt__.Sprintf("Error of type CosCollectionIteratorInBetween(%v)", self.String())
}
func (self *CosCollectionIteratorInBetween) GoString() string {
	return self.String()
}

func (self *CosCollectionIteratorInBetween) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionIteratorInBetween) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionIteratorInBetween) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosCollectionIteratorInBetween_Helper struct {
}

// Enum declaration: "CosCollection::ElementInvalidReason", generatedBy by: "WriteEnumDcl"
type CosCollectionElementInvalidReason uint32

//noinspection GoUnusedConst
const (
	CosCollectionElementInvalidReasonElementTypeInvalid         CosCollectionElementInvalidReason = 0
	CosCollectionElementInvalidReasonPositioningPropertyInvalid CosCollectionElementInvalidReason = 1
	CosCollectionElementInvalidReasonElementExists              CosCollectionElementInvalidReason = 2
)

//noinspection GoSnakeCaseUsage
type CosCollectionElementInvalidReason_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionElementInvalidReasonId_Const = "IDL:omg.org/CosCollection/ElementInvalidReason:1.0"

func (self CosCollectionElementInvalidReason_Helper) Id() string {
	return CosCollectionElementInvalidReasonId_Const
}

func (self CosCollectionElementInvalidReason_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CosCollectionElementInvalidReason_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// Exception declaration: "CosCollection::ElementInvalid", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosCollectionElementInvalid struct {
	__goidl__.IdlObject
	Why uint32 `json:"Why"`
}

//noinspection GoSnakeCaseUsage
const CosCollectionElementInvalidId_Const = "IDL:omg.org/CosCollection/ElementInvalid:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosCollectionElementInvalid() *CosCollectionElementInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionElementInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionElementInvalidId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "why", Type: "CosCollection::ElementInvalidReason" Scope: "IdlEnum"
		Why: 0,
	}
}

//noinspection GoUnusedExportedFunction
func NewCosCollectionElementInvalid(
	//"StructDclAllParamsConstructorParamService"
	Why uint32) *CosCollectionElementInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionElementInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionElementInvalidId_Const,
		},
		Why: Why,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosCollectionElementInvalid(randomGenerator __goidl__.IRandomDataGenerator) *CosCollectionElementInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionElementInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionElementInvalidId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "why", Type: "CosCollection::ElementInvalidReason" Scope: "IdlEnum"
		Why: randomGenerator.EnumTypeValue(__reflect__.TypeOf((*CosCollectionElementInvalid)(nil)), "Why"),
	}
}

func (self *CosCollectionElementInvalid) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosCollectionElementInvalid) Error() string{
	return 	__fmt__.Sprintf("Error of type CosCollectionElementInvalid(%v)", self.String())
}
func (self *CosCollectionElementInvalid) GoString() string {
	return self.String()
}

func (self *CosCollectionElementInvalid) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlEnum)
	self.Why, err = __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionElementInvalid) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionElementInvalid) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlEnum)
	err = __goidl__.IdlUInt32Helper.Write(stream, self.Why)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosCollectionElementInvalid_Helper struct {
}

// Exception declaration: "CosCollection::KeyInvalid", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosCollectionKeyInvalid struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeyInvalidId_Const = "IDL:omg.org/CosCollection/KeyInvalid:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosCollectionKeyInvalid() *CosCollectionKeyInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionKeyInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionKeyInvalidId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCosCollectionKeyInvalid() *CosCollectionKeyInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionKeyInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionKeyInvalidId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosCollectionKeyInvalid() *CosCollectionKeyInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionKeyInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionKeyInvalidId_Const,
		},
	}
}

func (self *CosCollectionKeyInvalid) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosCollectionKeyInvalid) Error() string{
	return 	__fmt__.Sprintf("Error of type CosCollectionKeyInvalid(%v)", self.String())
}
func (self *CosCollectionKeyInvalid) GoString() string {
	return self.String()
}

func (self *CosCollectionKeyInvalid) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionKeyInvalid) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionKeyInvalid) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeyInvalid_Helper struct {
}

// Exception declaration: "CosCollection::ParameterInvalid", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosCollectionParameterInvalid struct {
	__goidl__.IdlObject
	Which uint32 `json:"Which"`
	Why string `json:"Why"`
}

//noinspection GoSnakeCaseUsage
const CosCollectionParameterInvalidId_Const = "IDL:omg.org/CosCollection/ParameterInvalid:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosCollectionParameterInvalid() *CosCollectionParameterInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionParameterInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionParameterInvalidId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "which", Type: "IdlUnsignedLong" Scope: "UnsignedLongType"
		Which: 0,
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "why", Type: "CosCollection::Istring" Scope: "IdlTypedef"
		Why: "",
	}
}

//noinspection GoUnusedExportedFunction
func NewCosCollectionParameterInvalid(
	//"StructDclAllParamsConstructorParamService"
	Which uint32,
	//"StructDclAllParamsConstructorParamService"
	Why string) *CosCollectionParameterInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionParameterInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionParameterInvalidId_Const,
		},
		Which: Which,
		Why: Why,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosCollectionParameterInvalid(randomGenerator __goidl__.IRandomDataGenerator) *CosCollectionParameterInvalid {
	//noinspection GoRedundantConversion
	return &CosCollectionParameterInvalid{
		IdlObject: __goidl__.IdlObject{
			Id: CosCollectionParameterInvalidId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "which", Type: "IdlUnsignedLong" Scope: "UnsignedLongType"
		Which: randomGenerator.UnsignedLongTypeValue(__reflect__.TypeOf((*CosCollectionParameterInvalid)(nil)), "Which"),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "why", Type: "CosCollection::Istring" Scope: "IdlTypedef"
		Why: randomGenerator.StringTypeValue(__reflect__.TypeOf((*CosCollectionParameterInvalid)(nil)), "Why"),
	}
}

func (self *CosCollectionParameterInvalid) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosCollectionParameterInvalid) Error() string{
	return 	__fmt__.Sprintf("Error of type CosCollectionParameterInvalid(%v)", self.String())
}
func (self *CosCollectionParameterInvalid) GoString() string {
	return self.String()
}

func (self *CosCollectionParameterInvalid) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(UnsignedLongType)
	self.Which, err = __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(StringType)
	self.Why, err = __goidl__.IdlStringHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionParameterInvalid) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosCollectionParameterInvalid) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(UnsignedLongType)
	err = __goidl__.IdlUInt32Helper.Write(stream, self.Which)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(StringType)
	err = __goidl__.IdlStringHelper.Write(stream, self.Why)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosCollectionParameterInvalid_Helper struct {
}

// Interface declaration: "CosCollection::Operations", generatedBy by: "WriteInterface"
type CosCollectionOperations interface {
	// Interface operations
	// Original name: "check_element_type"
	CheckElementType(Element __goidl__.IdlAny) (result bool, err error)
	// Original name: "equal"
	Equal(Element1 __goidl__.IdlAny, Element2 __goidl__.IdlAny) (result bool, err error)
	// Original name: "compare"
	Compare(Element1 __goidl__.IdlAny, Element2 __goidl__.IdlAny) (result int32, err error)
	// Original name: "hash"
	Hash(Element __goidl__.IdlAny, Value uint32) (result uint32, err error)
	// Original name: "key"
	Key(Element __goidl__.IdlAny) (result __goidl__.IdlAny, err error)
	// Original name: "check_key_type"
	CheckKeyType(Key __goidl__.IdlAny) (result bool, err error)
	// Original name: "key_equal"
	KeyEqual(Key1 __goidl__.IdlAny, Key2 __goidl__.IdlAny) (result bool, err error)
	// Original name: "key_compare"
	KeyCompare(Key1 __goidl__.IdlAny, Key2 __goidl__.IdlAny) (result int32, err error)
	// Original name: "key_hash"
	KeyHash(ThisKey __goidl__.IdlAny, Value uint32) (result uint32, err error)
	// Original name: "destroy"
	Destroy() (error error)
	// Property ElementType
	// Get Property ElementType
	GetElementType() (CorbaTypeCode, error)
	// Property KeyType
	// Get Property KeyType
	GetKeyType() (CorbaTypeCode, error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionOperations_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionOperationsId_Const = "IDL:omg.org/CosCollection/Operations:1.0"

func (self CosCollectionOperations_Helper) Id() string {
	return CosCollectionOperationsId_Const
}

func (self CosCollectionOperations_Helper) Read(stream __goidl__.IReadAny) (CosCollectionOperations, error) {
	return nil, nil
}

func (self CosCollectionOperations_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionOperations) error {
	return nil
}

// Interface declaration: "CosCollection::Command", generatedBy by: "WriteInterface"
type CosCollectionCommand interface {
	// Interface operations
	// Original name: "do_on"
	DoOn(Element __goidl__.IdlAny) (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionCommand_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionCommandId_Const = "IDL:omg.org/CosCollection/Command:1.0"

func (self CosCollectionCommand_Helper) Id() string {
	return CosCollectionCommandId_Const
}

func (self CosCollectionCommand_Helper) Read(stream __goidl__.IReadAny) (CosCollectionCommand, error) {
	return nil, nil
}

func (self CosCollectionCommand_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionCommand) error {
	return nil
}

// Interface declaration: "CosCollection::Comparator", generatedBy by: "WriteInterface"
type CosCollectionComparator interface {
	// Interface operations
	// Original name: "compare"
	Compare(Element1 __goidl__.IdlAny, Element2 __goidl__.IdlAny) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionComparator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionComparatorId_Const = "IDL:omg.org/CosCollection/Comparator:1.0"

func (self CosCollectionComparator_Helper) Id() string {
	return CosCollectionComparatorId_Const
}

func (self CosCollectionComparator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionComparator, error) {
	return nil, nil
}

func (self CosCollectionComparator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionComparator) error {
	return nil
}

// Interface declaration: "CosCollection::Iterator", generatedBy by: "WriteInterface"
type CosCollectionIterator interface {
	// Interface operations
	// Original name: "set_to_first_element"
	SetToFirstElement() (result bool, err error)
	//Exceptions for : SetToNextElement
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_next_element"
	SetToNextElement() (result bool, err error)
	//Exceptions for : SetToNextNthElement
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_next_nth_element"
	SetToNextNthElement(N uint32) (result bool, err error)
	//Exceptions for : RetrieveElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_element"
	RetrieveElement() (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RetrieveElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_element_set_to_next"
	RetrieveElementSetToNext() (Element __goidl__.IdlAny, More bool, result bool, err error)
	//Exceptions for : RetrieveNextNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_next_n_elements"
	RetrieveNextNElements(N uint32) (Result CosCollectionAnySequence, More bool, result bool, err error)
	//Exceptions for : NotEqualRetrieveElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "not_equal_retrieve_element_set_to_next"
	NotEqualRetrieveElementSetToNext(Test CosCollectionIterator) (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RemoveElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_element"
	RemoveElement() (error error)
	//Exceptions for : RemoveElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_element_set_to_next"
	RemoveElementSetToNext() (result bool, err error)
	//Exceptions for : RemoveNextNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_next_n_elements"
	RemoveNextNElements(N uint32) (ActualNumber uint32, result bool, err error)
	//Exceptions for : NotEqualRemoveElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "not_equal_remove_element_set_to_next"
	NotEqualRemoveElementSetToNext(Test CosCollectionIterator) (result bool, err error)
	//Exceptions for : ReplaceElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_element"
	ReplaceElement(Element __goidl__.IdlAny) (error error)
	//Exceptions for : ReplaceElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_element_set_to_next"
	ReplaceElementSetToNext(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ReplaceNextNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_next_n_elements"
	ReplaceNextNElements(Elements CosCollectionAnySequence) (ActualNumber uint32, result bool, err error)
	//Exceptions for : NotEqualReplaceElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "not_equal_replace_element_set_to_next"
	NotEqualReplaceElementSetToNext(Test CosCollectionIterator, Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddElementSetIterator
	//	CosCollectionElementInvalid
	// Original name: "add_element_set_iterator"
	AddElementSetIterator(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddNElementsSetIterator
	//	CosCollectionElementInvalid
	// Original name: "add_n_elements_set_iterator"
	AddNElementsSetIterator(Elements CosCollectionAnySequence) (ActualNumber uint32, result bool, err error)
	// Original name: "invalidate"
	Invalidate() (error error)
	// Original name: "is_valid"
	IsValid() (result bool, err error)
	// Original name: "is_in_between"
	IsInBetween() (result bool, err error)
	// Original name: "is_for"
	IsFor(Collector CosCollectionCollection) (result bool, err error)
	// Original name: "is_const"
	IsConst() (result bool, err error)
	//Exceptions for : IsEqual
	//	CosCollectionIteratorInvalid
	// Original name: "is_equal"
	IsEqual(Test CosCollectionIterator) (result bool, err error)
	// Original name: "clone"
	Clone() (result CosCollectionIterator, err error)
	//Exceptions for : Assign
	//	CosCollectionIteratorInvalid
	// Original name: "assign"
	Assign(FromWhere CosCollectionIterator) (error error)
	// Original name: "destroy"
	Destroy() (error error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionIteratorId_Const = "IDL:omg.org/CosCollection/Iterator:1.0"

func (self CosCollectionIterator_Helper) Id() string {
	return CosCollectionIteratorId_Const
}

func (self CosCollectionIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionIterator, error) {
	return nil, nil
}

func (self CosCollectionIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionIterator) error {
	return nil
}

// Interface declaration: "CosCollection::OrderedIterator", generatedBy by: "WriteInterface"
type CosCollectionOrderedIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionIterator
	// Interface operations
	// Original name: "set_to_last_element"
	SetToLastElement() (result bool, err error)
	//Exceptions for : SetToPreviousElement
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_previous_element"
	SetToPreviousElement() (result bool, err error)
	//Exceptions for : SetToNthPreviousElement
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_nth_previous_element"
	SetToNthPreviousElement(N uint32) (result bool, err error)
	//Exceptions for : SetToPosition
	//	CosCollectionPositionInvalid
	// Original name: "set_to_position"
	SetToPosition(Position uint32) (error error)
	//Exceptions for : Position
	//	CosCollectionIteratorInvalid
	// Original name: "position"
	Position() (result uint32, err error)
	//Exceptions for : RetrieveElementSetToPrevious
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_element_set_to_previous"
	RetrieveElementSetToPrevious() (Element __goidl__.IdlAny, More bool, result bool, err error)
	//Exceptions for : RetrievePreviousNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_previous_n_elements"
	RetrievePreviousNElements(N uint32) (Result CosCollectionAnySequence, More bool, result bool, err error)
	//Exceptions for : NotEqualRetrieveElementSetToPrevious
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "not_equal_retrieve_element_set_to_previous"
	NotEqualRetrieveElementSetToPrevious(Test CosCollectionIterator) (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RemoveElementSetToPrevious
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_element_set_to_previous"
	RemoveElementSetToPrevious() (result bool, err error)
	//Exceptions for : RemovePreviousNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_previous_n_elements"
	RemovePreviousNElements(N uint32) (ActualNumber uint32, result bool, err error)
	//Exceptions for : NotEqualRemoveElementSetToPrevious
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "not_equal_remove_element_set_to_previous"
	NotEqualRemoveElementSetToPrevious(Test CosCollectionIterator) (result bool, err error)
	//Exceptions for : ReplaceElementSetToPrevious
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_element_set_to_previous"
	ReplaceElementSetToPrevious(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ReplacePreviousNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_previous_n_elements"
	ReplacePreviousNElements(Elements CosCollectionAnySequence) (ActualNumber uint32, result bool, err error)
	//Exceptions for : NotEqualReplaceElementSetToPrevious
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "not_equal_replace_element_set_to_previous"
	NotEqualReplaceElementSetToPrevious(Test CosCollectionIterator, Element __goidl__.IdlAny) (result bool, err error)
	// Original name: "is_first"
	IsFirst() (result bool, err error)
	// Original name: "is_last"
	IsLast() (result bool, err error)
	// Original name: "is_for_same"
	IsForSame(Test CosCollectionIterator) (result bool, err error)
	// Original name: "is_reverse"
	IsReverse() (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionOrderedIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionOrderedIteratorId_Const = "IDL:omg.org/CosCollection/OrderedIterator:1.0"

func (self CosCollectionOrderedIterator_Helper) Id() string {
	return CosCollectionOrderedIteratorId_Const
}

func (self CosCollectionOrderedIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionOrderedIterator, error) {
	return nil, nil
}

func (self CosCollectionOrderedIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionOrderedIterator) error {
	return nil
}

// Interface declaration: "CosCollection::SequentialIterator", generatedBy by: "WriteInterface"
type CosCollectionSequentialIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionOrderedIterator
	// Interface operations
	//Exceptions for : AddElementAsNextSetIterator
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "add_element_as_next_set_iterator"
	AddElementAsNextSetIterator(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddNElementsAsNextSetIterator
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "add_n_elements_as_next_set_iterator"
	AddNElementsAsNextSetIterator(Elements CosCollectionAnySequence) (error error)
	//Exceptions for : AddElementAsPreviousSetIterator
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "add_element_as_previous_set_iterator"
	AddElementAsPreviousSetIterator(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddNElementsAsPreviousSetIterator
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "add_n_elements_as_previous_set_iterator"
	AddNElementsAsPreviousSetIterator(Elements CosCollectionAnySequence) (error error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSequentialIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSequentialIteratorId_Const = "IDL:omg.org/CosCollection/SequentialIterator:1.0"

func (self CosCollectionSequentialIterator_Helper) Id() string {
	return CosCollectionSequentialIteratorId_Const
}

func (self CosCollectionSequentialIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSequentialIterator, error) {
	return nil, nil
}

func (self CosCollectionSequentialIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSequentialIterator) error {
	return nil
}

// Interface declaration: "CosCollection::KeyIterator", generatedBy by: "WriteInterface"
type CosCollectionKeyIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionIterator
	// Interface operations
	//Exceptions for : SetToElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "set_to_element_with_key"
	SetToElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToNextElementWithKey
	//	CosCollectionIteratorInvalid
	//	CosCollectionKeyInvalid
	// Original name: "set_to_next_element_with_key"
	SetToNextElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToNextElementWithDifferentKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_next_element_with_different_key"
	SetToNextElementWithDifferentKey() (result bool, err error)
	//Exceptions for : RetrieveKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "retrieve_key"
	RetrieveKey() (Key __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RetrieveNextNKeys
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "retrieve_next_n_keys"
	RetrieveNextNKeys() (Keys CosCollectionAnySequence, result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeyIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeyIteratorId_Const = "IDL:omg.org/CosCollection/KeyIterator:1.0"

func (self CosCollectionKeyIterator_Helper) Id() string {
	return CosCollectionKeyIteratorId_Const
}

func (self CosCollectionKeyIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeyIterator, error) {
	return nil, nil
}

func (self CosCollectionKeyIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeyIterator) error {
	return nil
}

// Interface declaration: "CosCollection::EqualityIterator", generatedBy by: "WriteInterface"
type CosCollectionEqualityIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionIterator
	// Interface operations
	//Exceptions for : SetToElementWithValue
	//	CosCollectionElementInvalid
	// Original name: "set_to_element_with_value"
	SetToElementWithValue(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToNextElementWithValue
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "set_to_next_element_with_value"
	SetToNextElementWithValue(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToNextElementWithDifferentValue
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_next_element_with_different_value"
	SetToNextElementWithDifferentValue() (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualityIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualityIteratorId_Const = "IDL:omg.org/CosCollection/EqualityIterator:1.0"

func (self CosCollectionEqualityIterator_Helper) Id() string {
	return CosCollectionEqualityIteratorId_Const
}

func (self CosCollectionEqualityIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualityIterator, error) {
	return nil, nil
}

func (self CosCollectionEqualityIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualityIterator) error {
	return nil
}

// Interface declaration: "CosCollection::EqualityKeyIterator", generatedBy by: "WriteInterface"
type CosCollectionEqualityKeyIterator interface {
	//Duplicate operations found in the base interfaces. This is a unique operation list.
	//Interfaces disabled:.
		//CosCollectionEqualityIterator
		//CosCollectionKeyIterator
	//Exceptions for : AddElementSetIterator
	//	CosCollectionElementInvalid
	// Original name: "add_element_set_iterator"
	AddElementSetIterator(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddNElementsSetIterator
	//	CosCollectionElementInvalid
	// Original name: "add_n_elements_set_iterator"
	AddNElementsSetIterator(Elements CosCollectionAnySequence) (ActualNumber uint32, result bool, err error)
	//Exceptions for : Assign
	//	CosCollectionIteratorInvalid
	// Original name: "assign"
	Assign(FromWhere CosCollectionIterator) (error error)
	// Original name: "clone"
	Clone() (result CosCollectionIterator, err error)
	// Original name: "destroy"
	Destroy() (error error)
	// Original name: "invalidate"
	Invalidate() (error error)
	// Original name: "is_const"
	IsConst() (result bool, err error)
	//Exceptions for : IsEqual
	//	CosCollectionIteratorInvalid
	// Original name: "is_equal"
	IsEqual(Test CosCollectionIterator) (result bool, err error)
	// Original name: "is_for"
	IsFor(Collector CosCollectionCollection) (result bool, err error)
	// Original name: "is_in_between"
	IsInBetween() (result bool, err error)
	// Original name: "is_valid"
	IsValid() (result bool, err error)
	//Exceptions for : NotEqualRemoveElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "not_equal_remove_element_set_to_next"
	NotEqualRemoveElementSetToNext(Test CosCollectionIterator) (result bool, err error)
	//Exceptions for : NotEqualReplaceElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "not_equal_replace_element_set_to_next"
	NotEqualReplaceElementSetToNext(Test CosCollectionIterator, Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : NotEqualRetrieveElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "not_equal_retrieve_element_set_to_next"
	NotEqualRetrieveElementSetToNext(Test CosCollectionIterator) (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RemoveElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_element"
	RemoveElement() (error error)
	//Exceptions for : RemoveElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_element_set_to_next"
	RemoveElementSetToNext() (result bool, err error)
	//Exceptions for : RemoveNextNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_next_n_elements"
	RemoveNextNElements(N uint32) (ActualNumber uint32, result bool, err error)
	//Exceptions for : ReplaceElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_element"
	ReplaceElement(Element __goidl__.IdlAny) (error error)
	//Exceptions for : ReplaceElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_element_set_to_next"
	ReplaceElementSetToNext(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ReplaceNextNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_next_n_elements"
	ReplaceNextNElements(Elements CosCollectionAnySequence) (ActualNumber uint32, result bool, err error)
	//Exceptions for : RetrieveElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_element"
	RetrieveElement() (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RetrieveElementSetToNext
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_element_set_to_next"
	RetrieveElementSetToNext() (Element __goidl__.IdlAny, More bool, result bool, err error)
	//Exceptions for : RetrieveKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "retrieve_key"
	RetrieveKey() (Key __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RetrieveNextNElements
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_next_n_elements"
	RetrieveNextNElements(N uint32) (Result CosCollectionAnySequence, More bool, result bool, err error)
	//Exceptions for : RetrieveNextNKeys
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "retrieve_next_n_keys"
	RetrieveNextNKeys() (Keys CosCollectionAnySequence, result bool, err error)
	//Exceptions for : SetToElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "set_to_element_with_key"
	SetToElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToElementWithValue
	//	CosCollectionElementInvalid
	// Original name: "set_to_element_with_value"
	SetToElementWithValue(Element __goidl__.IdlAny) (result bool, err error)
	// Original name: "set_to_first_element"
	SetToFirstElement() (result bool, err error)
	//Exceptions for : SetToNextElement
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_next_element"
	SetToNextElement() (result bool, err error)
	//Exceptions for : SetToNextElementWithDifferentKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_next_element_with_different_key"
	SetToNextElementWithDifferentKey() (result bool, err error)
	//Exceptions for : SetToNextElementWithDifferentValue
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_next_element_with_different_value"
	SetToNextElementWithDifferentValue() (result bool, err error)
	//Exceptions for : SetToNextElementWithKey
	//	CosCollectionIteratorInvalid
	//	CosCollectionKeyInvalid
	// Original name: "set_to_next_element_with_key"
	SetToNextElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToNextElementWithValue
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "set_to_next_element_with_value"
	SetToNextElementWithValue(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToNextNthElement
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_next_nth_element"
	SetToNextNthElement(N uint32) (result bool, err error)
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualityKeyIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualityKeyIteratorId_Const = "IDL:omg.org/CosCollection/EqualityKeyIterator:1.0"

func (self CosCollectionEqualityKeyIterator_Helper) Id() string {
	return CosCollectionEqualityKeyIteratorId_Const
}

func (self CosCollectionEqualityKeyIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualityKeyIterator, error) {
	return nil, nil
}

func (self CosCollectionEqualityKeyIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualityKeyIterator) error {
	return nil
}

// Interface declaration: "CosCollection::SortedIterator", generatedBy by: "WriteInterface"
type CosCollectionSortedIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionOrderedIterator
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedIteratorId_Const = "IDL:omg.org/CosCollection/SortedIterator:1.0"

func (self CosCollectionSortedIterator_Helper) Id() string {
	return CosCollectionSortedIteratorId_Const
}

func (self CosCollectionSortedIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedIterator, error) {
	return nil, nil
}

func (self CosCollectionSortedIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedIterator) error {
	return nil
}

// Enum declaration: "CosCollection::LowerBoundStyle", generatedBy by: "WriteEnumDcl"
type CosCollectionLowerBoundStyle uint32

//noinspection GoUnusedConst
const (
	CosCollectionLowerBoundStyleEqualLo        CosCollectionLowerBoundStyle = 0
	CosCollectionLowerBoundStyleGreater        CosCollectionLowerBoundStyle = 1
	CosCollectionLowerBoundStyleGreaterOrEqual CosCollectionLowerBoundStyle = 2
)

//noinspection GoSnakeCaseUsage
type CosCollectionLowerBoundStyle_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionLowerBoundStyleId_Const = "IDL:omg.org/CosCollection/LowerBoundStyle:1.0"

func (self CosCollectionLowerBoundStyle_Helper) Id() string {
	return CosCollectionLowerBoundStyleId_Const
}

func (self CosCollectionLowerBoundStyle_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CosCollectionLowerBoundStyle_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// Enum declaration: "CosCollection::UpperBoundStyle", generatedBy by: "WriteEnumDcl"
type CosCollectionUpperBoundStyle uint32

//noinspection GoUnusedConst
const (
	CosCollectionUpperBoundStyleEqualUp     CosCollectionUpperBoundStyle = 0
	CosCollectionUpperBoundStyleLess        CosCollectionUpperBoundStyle = 1
	CosCollectionUpperBoundStyleLessOrEqual CosCollectionUpperBoundStyle = 2
)

//noinspection GoSnakeCaseUsage
type CosCollectionUpperBoundStyle_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionUpperBoundStyleId_Const = "IDL:omg.org/CosCollection/UpperBoundStyle:1.0"

func (self CosCollectionUpperBoundStyle_Helper) Id() string {
	return CosCollectionUpperBoundStyleId_Const
}

func (self CosCollectionUpperBoundStyle_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CosCollectionUpperBoundStyle_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// Interface declaration: "CosCollection::KeySortedIterator", generatedBy by: "WriteInterface"
type CosCollectionKeySortedIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionKeyIterator
	CosCollectionSortedIterator
	// Interface operations
	//Exceptions for : SetToFirstElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "set_to_first_element_with_key"
	SetToFirstElementWithKey(Key __goidl__.IdlAny, Style uint32) (result bool, err error)
	//Exceptions for : SetToLastElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "set_to_last_element_with_key"
	SetToLastElementWithKey(Key __goidl__.IdlAny, Style uint32) (result bool, err error)
	//Exceptions for : SetToPreviousElementWithKey
	//	CosCollectionIteratorInvalid
	//	CosCollectionKeyInvalid
	// Original name: "set_to_previous_element_with_key"
	SetToPreviousElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToPreviousElementWithDifferentKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_previous_element_with_different_key"
	SetToPreviousElementWithDifferentKey() (result bool, err error)
	//Exceptions for : RetrievePreviousNKeys
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "retrieve_previous_n_keys"
	RetrievePreviousNKeys() (Keys CosCollectionAnySequence, result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeySortedIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeySortedIteratorId_Const = "IDL:omg.org/CosCollection/KeySortedIterator:1.0"

func (self CosCollectionKeySortedIterator_Helper) Id() string {
	return CosCollectionKeySortedIteratorId_Const
}

func (self CosCollectionKeySortedIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeySortedIterator, error) {
	return nil, nil
}

func (self CosCollectionKeySortedIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeySortedIterator) error {
	return nil
}

// Interface declaration: "CosCollection::EqualitySortedIterator", generatedBy by: "WriteInterface"
type CosCollectionEqualitySortedIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityIterator
	CosCollectionSortedIterator
	// Interface operations
	//Exceptions for : SetToFirstElementWithValue
	//	CosCollectionElementInvalid
	// Original name: "set_to_first_element_with_value"
	SetToFirstElementWithValue(Element __goidl__.IdlAny, Style uint32) (result bool, err error)
	//Exceptions for : SetToLastElementWithValue
	//	CosCollectionElementInvalid
	// Original name: "set_to_last_element_with_value"
	SetToLastElementWithValue(Element __goidl__.IdlAny, Style uint32) (result bool, err error)
	//Exceptions for : SetToPreviousElementWithValue
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "set_to_previous_element_with_value"
	SetToPreviousElementWithValue(Elementally __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToPreviousElementWithDifferentValue
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "set_to_previous_element_with_different_value"
	SetToPreviousElementWithDifferentValue() (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualitySortedIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualitySortedIteratorId_Const = "IDL:omg.org/CosCollection/EqualitySortedIterator:1.0"

func (self CosCollectionEqualitySortedIterator_Helper) Id() string {
	return CosCollectionEqualitySortedIteratorId_Const
}

func (self CosCollectionEqualitySortedIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualitySortedIterator, error) {
	return nil, nil
}

func (self CosCollectionEqualitySortedIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualitySortedIterator) error {
	return nil
}

// Interface declaration: "CosCollection::EqualityKeySortedIterator", generatedBy by: "WriteInterface"
type CosCollectionEqualityKeySortedIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualitySortedIterator
	CosCollectionKeySortedIterator
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualityKeySortedIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualityKeySortedIteratorId_Const = "IDL:omg.org/CosCollection/EqualityKeySortedIterator:1.0"

func (self CosCollectionEqualityKeySortedIterator_Helper) Id() string {
	return CosCollectionEqualityKeySortedIteratorId_Const
}

func (self CosCollectionEqualityKeySortedIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualityKeySortedIterator, error) {
	return nil, nil
}

func (self CosCollectionEqualityKeySortedIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualityKeySortedIterator) error {
	return nil
}

// Interface declaration: "CosCollection::EqualitySequentialIterator", generatedBy by: "WriteInterface"
type CosCollectionEqualitySequentialIterator interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityIterator
	CosCollectionSequentialIterator
	// Interface operations
	//Exceptions for : SetToFirstElementWithValue
	//	CosCollectionElementInvalid
	// Original name: "set_to_first_element_with_value"
	SetToFirstElementWithValue(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToLastElementWithValue
	//	CosCollectionElementInvalid
	// Original name: "set_to_last_element_with_value"
	SetToLastElementWithValue(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : SetToPreviousElementWithValue
	//	CosCollectionElementInvalid
	// Original name: "set_to_previous_element_with_value"
	SetToPreviousElementWithValue(Element __goidl__.IdlAny) (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualitySequentialIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualitySequentialIteratorId_Const = "IDL:omg.org/CosCollection/EqualitySequentialIterator:1.0"

func (self CosCollectionEqualitySequentialIterator_Helper) Id() string {
	return CosCollectionEqualitySequentialIteratorId_Const
}

func (self CosCollectionEqualitySequentialIterator_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualitySequentialIterator, error) {
	return nil, nil
}

func (self CosCollectionEqualitySequentialIterator_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualitySequentialIterator) error {
	return nil
}

// Interface declaration: "CosCollection::Collection", generatedBy by: "WriteInterface"
type CosCollectionCollection interface {
	// Interface operations
	//Exceptions for : AddElement
	//	CosCollectionElementInvalid
	// Original name: "add_element"
	AddElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddElementSetIterator
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "add_element_set_iterator"
	AddElementSetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : AddAllFrom
	//	CosCollectionElementInvalid
	// Original name: "add_all_from"
	AddAllFrom(Collector CosCollectionCollection) (error error)
	//Exceptions for : RemoveElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_element_at"
	RemoveElementAt(Where CosCollectionIterator) (error error)
	// Original name: "remove_all"
	RemoveAll() (result uint32, err error)
	//Exceptions for : ReplaceElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_element_at"
	ReplaceElementAt(Where CosCollectionIterator, Element __goidl__.IdlAny) (error error)
	//Exceptions for : RetrieveElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_element_at"
	RetrieveElementAt(Where CosCollectionIterator) (Element __goidl__.IdlAny, result bool, err error)
	// Original name: "all_elements_do"
	AllElementsDo(What CosCollectionCommand) (result bool, err error)
	// Original name: "number_of_elements"
	NumberOfElements() (result uint32, err error)
	// Original name: "is_empty"
	IsEmpty() (result bool, err error)
	// Original name: "destroy"
	Destroy() (error error)
	// Original name: "create_iterator"
	CreateIterator(ReadOnly bool) (result CosCollectionIterator, err error)
	// Property ElementType
	// Get Property ElementType
	GetElementType() (CorbaTypeCode, error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionCollectionId_Const = "IDL:omg.org/CosCollection/Collection:1.0"

func (self CosCollectionCollection_Helper) Id() string {
	return CosCollectionCollectionId_Const
}

func (self CosCollectionCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionCollection, error) {
	return nil, nil
}

func (self CosCollectionCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionCollection) error {
	return nil
}

// Interface declaration: "CosCollection::OrderedCollection", generatedBy by: "WriteInterface"
type CosCollectionOrderedCollection interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollection
	// Interface operations
	//Exceptions for : RemoveElementAtPosition
	//	CosCollectionPositionInvalid
	// Original name: "remove_element_at_position"
	RemoveElementAtPosition(Position uint32) (error error)
	//Exceptions for : RemoveFirstElement
	//	CosCollectionEmptyCollection
	// Original name: "remove_first_element"
	RemoveFirstElement() (error error)
	//Exceptions for : RemoveLastElement
	//	CosCollectionEmptyCollection
	// Original name: "remove_last_element"
	RemoveLastElement() (error error)
	//Exceptions for : RetrieveElementAtPosition
	//	CosCollectionPositionInvalid
	// Original name: "retrieve_element_at_position"
	RetrieveElementAtPosition(Position uint32) (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RetrieveFirstElement
	//	CosCollectionEmptyCollection
	// Original name: "retrieve_first_element"
	RetrieveFirstElement() (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RetrieveLastElement
	//	CosCollectionEmptyCollection
	// Original name: "retrieve_last_element"
	RetrieveLastElement() (Element __goidl__.IdlAny, result bool, err error)
	// Original name: "create_ordered_iterator"
	CreateOrderedIterator(ReadOnly bool, ReverseIteration bool) (result CosCollectionOrderedIterator, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionOrderedCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionOrderedCollectionId_Const = "IDL:omg.org/CosCollection/OrderedCollection:1.0"

func (self CosCollectionOrderedCollection_Helper) Id() string {
	return CosCollectionOrderedCollectionId_Const
}

func (self CosCollectionOrderedCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionOrderedCollection, error) {
	return nil, nil
}

func (self CosCollectionOrderedCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionOrderedCollection) error {
	return nil
}

// Interface declaration: "CosCollection::SequentialCollection", generatedBy by: "WriteInterface"
type CosCollectionSequentialCollection interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionOrderedCollection
	// Interface operations
	//Exceptions for : AddElementAsFirst
	//	CosCollectionElementInvalid
	// Original name: "add_element_as_first"
	AddElementAsFirst(Element __goidl__.IdlAny) (error error)
	//Exceptions for : AddElementAsFirstSetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "add_element_as_first_set_iterator"
	AddElementAsFirstSetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (error error)
	//Exceptions for : AddElementAsLast
	//	CosCollectionElementInvalid
	// Original name: "add_element_as_last"
	AddElementAsLast(Element __goidl__.IdlAny) (error error)
	//Exceptions for : AddElementAsLastSetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "add_element_as_last_set_iterator"
	AddElementAsLastSetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (error error)
	//Exceptions for : AddElementAsNext
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "add_element_as_next"
	AddElementAsNext(Element __goidl__.IdlAny, Where CosCollectionIterator) (error error)
	//Exceptions for : AddElementAsPrevious
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "add_element_as_previous"
	AddElementAsPrevious(Element __goidl__.IdlAny, Where CosCollectionIterator) (error error)
	//Exceptions for : AddElementAtPosition
	//	CosCollectionPositionInvalid
	//	CosCollectionElementInvalid
	// Original name: "add_element_at_position"
	AddElementAtPosition(Position uint32, Element __goidl__.IdlAny) (error error)
	//Exceptions for : AddElementAtPositionSetIterator
	//	CosCollectionPositionInvalid
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "add_element_at_position_set_iterator"
	AddElementAtPositionSetIterator(Position uint32, Element __goidl__.IdlAny, Where CosCollectionIterator) (error error)
	//Exceptions for : ReplaceElementAtPosition
	//	CosCollectionPositionInvalid
	//	CosCollectionElementInvalid
	// Original name: "replace_element_at_position"
	ReplaceElementAtPosition(Position uint32, Element __goidl__.IdlAny) (error error)
	//Exceptions for : ReplaceFirstElement
	//	CosCollectionElementInvalid
	//	CosCollectionEmptyCollection
	// Original name: "replace_first_element"
	ReplaceFirstElement(Element __goidl__.IdlAny) (error error)
	//Exceptions for : ReplaceLastElement
	//	CosCollectionElementInvalid
	//	CosCollectionEmptyCollection
	// Original name: "replace_last_element"
	ReplaceLastElement(Element __goidl__.IdlAny) (error error)
	// Original name: "sort"
	Sort(Comparison CosCollectionComparator) (error error)
	// Original name: "reverse"
	Reverse() (error error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSequentialCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSequentialCollectionId_Const = "IDL:omg.org/CosCollection/SequentialCollection:1.0"

func (self CosCollectionSequentialCollection_Helper) Id() string {
	return CosCollectionSequentialCollectionId_Const
}

func (self CosCollectionSequentialCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSequentialCollection, error) {
	return nil, nil
}

func (self CosCollectionSequentialCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSequentialCollection) error {
	return nil
}

// Interface declaration: "CosCollection::SortedCollection", generatedBy by: "WriteInterface"
type CosCollectionSortedCollection interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionOrderedCollection
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedCollectionId_Const = "IDL:omg.org/CosCollection/SortedCollection:1.0"

func (self CosCollectionSortedCollection_Helper) Id() string {
	return CosCollectionSortedCollectionId_Const
}

func (self CosCollectionSortedCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedCollection, error) {
	return nil, nil
}

func (self CosCollectionSortedCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedCollection) error {
	return nil
}

// Interface declaration: "CosCollection::EqualityCollection", generatedBy by: "WriteInterface"
type CosCollectionEqualityCollection interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollection
	// Interface operations
	//Exceptions for : ContainsElement
	//	CosCollectionElementInvalid
	// Original name: "contains_element"
	ContainsElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ContainsAllFrom
	//	CosCollectionElementInvalid
	// Original name: "contains_all_from"
	ContainsAllFrom(Collector CosCollectionCollection) (result bool, err error)
	//Exceptions for : LocateOrAddElement
	//	CosCollectionElementInvalid
	// Original name: "locate_or_add_element"
	LocateOrAddElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : LocateOrAddElementSetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_or_add_element_set_iterator"
	LocateOrAddElementSetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_element"
	LocateElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element"
	LocateNextElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextDifferentElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "locate_next_different_element"
	LocateNextDifferentElement(Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : RemoveElement
	//	CosCollectionElementInvalid
	// Original name: "remove_element"
	RemoveElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : RemoveAllOccurrences
	//	CosCollectionElementInvalid
	// Original name: "remove_all_occurrences"
	RemoveAllOccurrences(Element __goidl__.IdlAny) (result uint32, err error)
	// Original name: "number_of_different_elements"
	NumberOfDifferentElements() (result uint32, err error)
	//Exceptions for : NumberOfOccurrences
	//	CosCollectionElementInvalid
	// Original name: "number_of_occurrences"
	NumberOfOccurrences(Element __goidl__.IdlAny) (result uint32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualityCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualityCollectionId_Const = "IDL:omg.org/CosCollection/EqualityCollection:1.0"

func (self CosCollectionEqualityCollection_Helper) Id() string {
	return CosCollectionEqualityCollectionId_Const
}

func (self CosCollectionEqualityCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualityCollection, error) {
	return nil, nil
}

func (self CosCollectionEqualityCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualityCollection) error {
	return nil
}

// Interface declaration: "CosCollection::KeyCollection", generatedBy by: "WriteInterface"
type CosCollectionKeyCollection interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollection
	// Interface operations
	//Exceptions for : ContainsElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "contains_element_with_key"
	ContainsElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ContainsAllKeysFrom
	//	CosCollectionKeyInvalid
	// Original name: "contains_all_keys_from"
	ContainsAllKeysFrom(Collector CosCollectionKeyCollection) (result bool, err error)
	//Exceptions for : LocateOrAddElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "locate_or_add_element_with_key"
	LocateOrAddElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : LocateOrAddElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_or_add_element_with_key_set_iterator"
	LocateOrAddElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : AddOrReplaceElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "add_or_replace_element_with_key"
	AddOrReplaceElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddOrReplaceElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "add_or_replace_element_with_key_set_iterator"
	AddOrReplaceElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : RemoveElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "remove_element_with_key"
	RemoveElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : RemoveAllElementsWithKey
	//	CosCollectionKeyInvalid
	// Original name: "remove_all_elements_with_key"
	RemoveAllElementsWithKey(Key __goidl__.IdlAny) (result uint32, err error)
	//Exceptions for : ReplaceElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "replace_element_with_key"
	ReplaceElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ReplaceElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "replace_element_with_key_set_iterator"
	ReplaceElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : RetrieveElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "retrieve_element_with_key"
	RetrieveElementWithKey(Key __goidl__.IdlAny) (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : Key
	//	CosCollectionElementInvalid
	// Original name: "key"
	Key(Element __goidl__.IdlAny) (Key __goidl__.IdlAny, error error)
	//Exceptions for : Keys
	//	CosCollectionElementInvalid
	// Original name: "keys"
	Keys(Elements CosCollectionAnySequence) (Keys CosCollectionAnySequence, error error)
	//Exceptions for : LocateElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_element_with_key"
	LocateElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element_with_key"
	LocateNextElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElementWithDifferentKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element_with_different_key"
	LocateNextElementWithDifferentKey(Where CosCollectionIterator) (result bool, err error)
	// Original name: "number_of_different_keys"
	NumberOfDifferentKeys() (result uint32, err error)
	//Exceptions for : NumberOfElementsWithKey
	//	CosCollectionKeyInvalid
	// Original name: "number_of_elements_with_key"
	NumberOfElementsWithKey(Key __goidl__.IdlAny) (result uint32, err error)
	// Property KeyType
	// Get Property KeyType
	GetKeyType() (CorbaTypeCode, error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeyCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeyCollectionId_Const = "IDL:omg.org/CosCollection/KeyCollection:1.0"

func (self CosCollectionKeyCollection_Helper) Id() string {
	return CosCollectionKeyCollectionId_Const
}

func (self CosCollectionKeyCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeyCollection, error) {
	return nil, nil
}

func (self CosCollectionKeyCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeyCollection) error {
	return nil
}

// Interface declaration: "CosCollection::EqualityKeyCollection", generatedBy by: "WriteInterface"
type CosCollectionEqualityKeyCollection interface {
	//Duplicate operations found in the base interfaces. This is a unique operation list.
	//Interfaces disabled:.
		//CosCollectionEqualityCollection
		//CosCollectionKeyCollection
	//Exceptions for : AddAllFrom
	//	CosCollectionElementInvalid
	// Original name: "add_all_from"
	AddAllFrom(Collector CosCollectionCollection) (error error)
	//Exceptions for : AddElement
	//	CosCollectionElementInvalid
	// Original name: "add_element"
	AddElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddElementSetIterator
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "add_element_set_iterator"
	AddElementSetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : AddOrReplaceElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "add_or_replace_element_with_key"
	AddOrReplaceElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddOrReplaceElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "add_or_replace_element_with_key_set_iterator"
	AddOrReplaceElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	// Original name: "all_elements_do"
	AllElementsDo(What CosCollectionCommand) (result bool, err error)
	//Exceptions for : ContainsAllFrom
	//	CosCollectionElementInvalid
	// Original name: "contains_all_from"
	ContainsAllFrom(Collector CosCollectionCollection) (result bool, err error)
	//Exceptions for : ContainsAllKeysFrom
	//	CosCollectionKeyInvalid
	// Original name: "contains_all_keys_from"
	ContainsAllKeysFrom(Collector CosCollectionKeyCollection) (result bool, err error)
	//Exceptions for : ContainsElement
	//	CosCollectionElementInvalid
	// Original name: "contains_element"
	ContainsElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ContainsElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "contains_element_with_key"
	ContainsElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	// Original name: "create_iterator"
	CreateIterator(ReadOnly bool) (result CosCollectionIterator, err error)
	// Original name: "destroy"
	Destroy() (error error)
	// Original name: "is_empty"
	IsEmpty() (result bool, err error)
	//Exceptions for : Key
	//	CosCollectionElementInvalid
	// Original name: "key"
	Key(Element __goidl__.IdlAny) (Key __goidl__.IdlAny, error error)
	//Exceptions for : Keys
	//	CosCollectionElementInvalid
	// Original name: "keys"
	Keys(Elements CosCollectionAnySequence) (Keys CosCollectionAnySequence, error error)
	//Exceptions for : LocateElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_element"
	LocateElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_element_with_key"
	LocateElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextDifferentElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "locate_next_different_element"
	LocateNextDifferentElement(Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element"
	LocateNextElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElementWithDifferentKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element_with_different_key"
	LocateNextElementWithDifferentKey(Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element_with_key"
	LocateNextElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateOrAddElement
	//	CosCollectionElementInvalid
	// Original name: "locate_or_add_element"
	LocateOrAddElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : LocateOrAddElementSetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_or_add_element_set_iterator"
	LocateOrAddElementSetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateOrAddElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "locate_or_add_element_with_key"
	LocateOrAddElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : LocateOrAddElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_or_add_element_with_key_set_iterator"
	LocateOrAddElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	// Original name: "number_of_different_elements"
	NumberOfDifferentElements() (result uint32, err error)
	// Original name: "number_of_different_keys"
	NumberOfDifferentKeys() (result uint32, err error)
	// Original name: "number_of_elements"
	NumberOfElements() (result uint32, err error)
	//Exceptions for : NumberOfElementsWithKey
	//	CosCollectionKeyInvalid
	// Original name: "number_of_elements_with_key"
	NumberOfElementsWithKey(Key __goidl__.IdlAny) (result uint32, err error)
	//Exceptions for : NumberOfOccurrences
	//	CosCollectionElementInvalid
	// Original name: "number_of_occurrences"
	NumberOfOccurrences(Element __goidl__.IdlAny) (result uint32, err error)
	// Original name: "remove_all"
	RemoveAll() (result uint32, err error)
	//Exceptions for : RemoveAllElementsWithKey
	//	CosCollectionKeyInvalid
	// Original name: "remove_all_elements_with_key"
	RemoveAllElementsWithKey(Key __goidl__.IdlAny) (result uint32, err error)
	//Exceptions for : RemoveAllOccurrences
	//	CosCollectionElementInvalid
	// Original name: "remove_all_occurrences"
	RemoveAllOccurrences(Element __goidl__.IdlAny) (result uint32, err error)
	//Exceptions for : RemoveElement
	//	CosCollectionElementInvalid
	// Original name: "remove_element"
	RemoveElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : RemoveElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_element_at"
	RemoveElementAt(Where CosCollectionIterator) (error error)
	//Exceptions for : RemoveElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "remove_element_with_key"
	RemoveElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ReplaceElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_element_at"
	ReplaceElementAt(Where CosCollectionIterator, Element __goidl__.IdlAny) (error error)
	//Exceptions for : ReplaceElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "replace_element_with_key"
	ReplaceElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ReplaceElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "replace_element_with_key_set_iterator"
	ReplaceElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : RetrieveElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_element_at"
	RetrieveElementAt(Where CosCollectionIterator) (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RetrieveElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "retrieve_element_with_key"
	RetrieveElementWithKey(Key __goidl__.IdlAny) (Element __goidl__.IdlAny, result bool, err error)
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualityKeyCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualityKeyCollectionId_Const = "IDL:omg.org/CosCollection/EqualityKeyCollection:1.0"

func (self CosCollectionEqualityKeyCollection_Helper) Id() string {
	return CosCollectionEqualityKeyCollectionId_Const
}

func (self CosCollectionEqualityKeyCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualityKeyCollection, error) {
	return nil, nil
}

func (self CosCollectionEqualityKeyCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualityKeyCollection) error {
	return nil
}

// Interface declaration: "CosCollection::KeySortedCollection", generatedBy by: "WriteInterface"
type CosCollectionKeySortedCollection interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionKeyCollection
	CosCollectionSortedCollection
	// Interface operations
	//Exceptions for : LocateFirstElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_first_element_with_key"
	LocateFirstElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateLastElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_last_element_with_key"
	LocateLastElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocatePreviousElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_previous_element_with_key"
	LocatePreviousElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocatePreviousElementWithDifferentKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "locate_previous_element_with_different_key"
	LocatePreviousElementWithDifferentKey(Where CosCollectionIterator) (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeySortedCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeySortedCollectionId_Const = "IDL:omg.org/CosCollection/KeySortedCollection:1.0"

func (self CosCollectionKeySortedCollection_Helper) Id() string {
	return CosCollectionKeySortedCollectionId_Const
}

func (self CosCollectionKeySortedCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeySortedCollection, error) {
	return nil, nil
}

func (self CosCollectionKeySortedCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeySortedCollection) error {
	return nil
}

// Interface declaration: "CosCollection::EqualitySortedCollection", generatedBy by: "WriteInterface"
type CosCollectionEqualitySortedCollection interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityCollection
	CosCollectionSortedCollection
	// Interface operations
	//Exceptions for : LocateFirstElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_first_element"
	LocateFirstElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateLastElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_last_element"
	LocateLastElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocatePreviousElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_previous_element"
	LocatePreviousElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocatePreviousDifferentElement
	//	CosCollectionIteratorInvalid
	// Original name: "locate_previous_different_element"
	LocatePreviousDifferentElement(Where CosCollectionIterator) (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualitySortedCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualitySortedCollectionId_Const = "IDL:omg.org/CosCollection/EqualitySortedCollection:1.0"

func (self CosCollectionEqualitySortedCollection_Helper) Id() string {
	return CosCollectionEqualitySortedCollectionId_Const
}

func (self CosCollectionEqualitySortedCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualitySortedCollection, error) {
	return nil, nil
}

func (self CosCollectionEqualitySortedCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualitySortedCollection) error {
	return nil
}

// Interface declaration: "CosCollection::EqualityKeySortedCollection", generatedBy by: "WriteInterface"
type CosCollectionEqualityKeySortedCollection interface {
	//Duplicate operations found in the base interfaces. This is a unique operation list.
	//Interfaces disabled:.
		//CosCollectionEqualityCollection
		//CosCollectionKeyCollection
		//CosCollectionSortedCollection
	//Exceptions for : AddAllFrom
	//	CosCollectionElementInvalid
	// Original name: "add_all_from"
	AddAllFrom(Collector CosCollectionCollection) (error error)
	//Exceptions for : AddElement
	//	CosCollectionElementInvalid
	// Original name: "add_element"
	AddElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddElementSetIterator
	//	CosCollectionIteratorInvalid
	//	CosCollectionElementInvalid
	// Original name: "add_element_set_iterator"
	AddElementSetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : AddOrReplaceElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "add_or_replace_element_with_key"
	AddOrReplaceElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : AddOrReplaceElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "add_or_replace_element_with_key_set_iterator"
	AddOrReplaceElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	// Original name: "all_elements_do"
	AllElementsDo(What CosCollectionCommand) (result bool, err error)
	//Exceptions for : ContainsAllFrom
	//	CosCollectionElementInvalid
	// Original name: "contains_all_from"
	ContainsAllFrom(Collector CosCollectionCollection) (result bool, err error)
	//Exceptions for : ContainsAllKeysFrom
	//	CosCollectionKeyInvalid
	// Original name: "contains_all_keys_from"
	ContainsAllKeysFrom(Collector CosCollectionKeyCollection) (result bool, err error)
	//Exceptions for : ContainsElement
	//	CosCollectionElementInvalid
	// Original name: "contains_element"
	ContainsElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ContainsElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "contains_element_with_key"
	ContainsElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	// Original name: "create_iterator"
	CreateIterator(ReadOnly bool) (result CosCollectionIterator, err error)
	// Original name: "destroy"
	Destroy() (error error)
	// Original name: "is_empty"
	IsEmpty() (result bool, err error)
	//Exceptions for : Key
	//	CosCollectionElementInvalid
	// Original name: "key"
	Key(Element __goidl__.IdlAny) (Key __goidl__.IdlAny, error error)
	//Exceptions for : Keys
	//	CosCollectionElementInvalid
	// Original name: "keys"
	Keys(Elements CosCollectionAnySequence) (Keys CosCollectionAnySequence, error error)
	//Exceptions for : LocateElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_element"
	LocateElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_element_with_key"
	LocateElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextDifferentElement
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "locate_next_different_element"
	LocateNextDifferentElement(Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElement
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element"
	LocateNextElement(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElementWithDifferentKey
	//	CosCollectionIteratorInBetween
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element_with_different_key"
	LocateNextElementWithDifferentKey(Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateNextElementWithKey
	//	CosCollectionKeyInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_next_element_with_key"
	LocateNextElementWithKey(Key __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateOrAddElement
	//	CosCollectionElementInvalid
	// Original name: "locate_or_add_element"
	LocateOrAddElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : LocateOrAddElementSetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_or_add_element_set_iterator"
	LocateOrAddElementSetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateOrAddElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "locate_or_add_element_with_key"
	LocateOrAddElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : LocateOrAddElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_or_add_element_with_key_set_iterator"
	LocateOrAddElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	// Original name: "number_of_different_elements"
	NumberOfDifferentElements() (result uint32, err error)
	// Original name: "number_of_different_keys"
	NumberOfDifferentKeys() (result uint32, err error)
	// Original name: "number_of_elements"
	NumberOfElements() (result uint32, err error)
	//Exceptions for : NumberOfElementsWithKey
	//	CosCollectionKeyInvalid
	// Original name: "number_of_elements_with_key"
	NumberOfElementsWithKey(Key __goidl__.IdlAny) (result uint32, err error)
	//Exceptions for : NumberOfOccurrences
	//	CosCollectionElementInvalid
	// Original name: "number_of_occurrences"
	NumberOfOccurrences(Element __goidl__.IdlAny) (result uint32, err error)
	// Original name: "remove_all"
	RemoveAll() (result uint32, err error)
	//Exceptions for : RemoveAllElementsWithKey
	//	CosCollectionKeyInvalid
	// Original name: "remove_all_elements_with_key"
	RemoveAllElementsWithKey(Key __goidl__.IdlAny) (result uint32, err error)
	//Exceptions for : RemoveAllOccurrences
	//	CosCollectionElementInvalid
	// Original name: "remove_all_occurrences"
	RemoveAllOccurrences(Element __goidl__.IdlAny) (result uint32, err error)
	//Exceptions for : RemoveElement
	//	CosCollectionElementInvalid
	// Original name: "remove_element"
	RemoveElement(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : RemoveElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "remove_element_at"
	RemoveElementAt(Where CosCollectionIterator) (error error)
	//Exceptions for : RemoveElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "remove_element_with_key"
	RemoveElementWithKey(Key __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ReplaceElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	//	CosCollectionElementInvalid
	// Original name: "replace_element_at"
	ReplaceElementAt(Where CosCollectionIterator, Element __goidl__.IdlAny) (error error)
	//Exceptions for : ReplaceElementWithKey
	//	CosCollectionElementInvalid
	// Original name: "replace_element_with_key"
	ReplaceElementWithKey(Element __goidl__.IdlAny) (result bool, err error)
	//Exceptions for : ReplaceElementWithKeySetIterator
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "replace_element_with_key_set_iterator"
	ReplaceElementWithKeySetIterator(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : RetrieveElementAt
	//	CosCollectionIteratorInvalid
	//	CosCollectionIteratorInBetween
	// Original name: "retrieve_element_at"
	RetrieveElementAt(Where CosCollectionIterator) (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : RetrieveElementWithKey
	//	CosCollectionKeyInvalid
	// Original name: "retrieve_element_with_key"
	RetrieveElementWithKey(Key __goidl__.IdlAny) (Element __goidl__.IdlAny, result bool, err error)
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualityKeySortedCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualityKeySortedCollectionId_Const = "IDL:omg.org/CosCollection/EqualityKeySortedCollection:1.0"

func (self CosCollectionEqualityKeySortedCollection_Helper) Id() string {
	return CosCollectionEqualityKeySortedCollectionId_Const
}

func (self CosCollectionEqualityKeySortedCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualityKeySortedCollection, error) {
	return nil, nil
}

func (self CosCollectionEqualityKeySortedCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualityKeySortedCollection) error {
	return nil
}

// Interface declaration: "CosCollection::EqualitySequentialCollection", generatedBy by: "WriteInterface"
type CosCollectionEqualitySequentialCollection interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityCollection
	CosCollectionSequentialCollection
	// Interface operations
	//Exceptions for : LocateFirstElementWithValue
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_first_element_with_value"
	LocateFirstElementWithValue(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocateLastElementWithValue
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_last_element_with_value"
	LocateLastElementWithValue(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
	//Exceptions for : LocatePreviousElementWithValue
	//	CosCollectionElementInvalid
	//	CosCollectionIteratorInvalid
	// Original name: "locate_previous_element_with_value"
	LocatePreviousElementWithValue(Element __goidl__.IdlAny, Where CosCollectionIterator) (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualitySequentialCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualitySequentialCollectionId_Const = "IDL:omg.org/CosCollection/EqualitySequentialCollection:1.0"

func (self CosCollectionEqualitySequentialCollection_Helper) Id() string {
	return CosCollectionEqualitySequentialCollectionId_Const
}

func (self CosCollectionEqualitySequentialCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualitySequentialCollection, error) {
	return nil, nil
}

func (self CosCollectionEqualitySequentialCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualitySequentialCollection) error {
	return nil
}

// Interface declaration: "CosCollection::KeySet", generatedBy by: "WriteInterface"
type CosCollectionKeySet interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionKeyCollection
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeySet_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeySetId_Const = "IDL:omg.org/CosCollection/KeySet:1.0"

func (self CosCollectionKeySet_Helper) Id() string {
	return CosCollectionKeySetId_Const
}

func (self CosCollectionKeySet_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeySet, error) {
	return nil, nil
}

func (self CosCollectionKeySet_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeySet) error {
	return nil
}

// Interface declaration: "CosCollection::KeyBag", generatedBy by: "WriteInterface"
type CosCollectionKeyBag interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionKeyCollection
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeyBag_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeyBagId_Const = "IDL:omg.org/CosCollection/KeyBag:1.0"

func (self CosCollectionKeyBag_Helper) Id() string {
	return CosCollectionKeyBagId_Const
}

func (self CosCollectionKeyBag_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeyBag, error) {
	return nil, nil
}

func (self CosCollectionKeyBag_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeyBag) error {
	return nil
}

// Interface declaration: "CosCollection::Map", generatedBy by: "WriteInterface"
type CosCollectionMap interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityKeyCollection
	// Interface operations
	//Exceptions for : DifferenceWith
	//	CosCollectionElementInvalid
	// Original name: "difference_with"
	DifferenceWith(Collector CosCollectionMap) (error error)
	//Exceptions for : AddDifference
	//	CosCollectionElementInvalid
	// Original name: "add_difference"
	AddDifference(Collector1 CosCollectionMap, Collector2 CosCollectionMap) (error error)
	//Exceptions for : IntersectionWith
	//	CosCollectionElementInvalid
	// Original name: "intersection_with"
	IntersectionWith(Collector CosCollectionMap) (error error)
	//Exceptions for : AddIntersection
	//	CosCollectionElementInvalid
	// Original name: "add_intersection"
	AddIntersection(Collector1 CosCollectionMap, Collector2 CosCollectionMap) (error error)
	//Exceptions for : UnionWith
	//	CosCollectionElementInvalid
	// Original name: "union_with"
	UnionWith(Collector CosCollectionMap) (error error)
	//Exceptions for : AddUnion
	//	CosCollectionElementInvalid
	// Original name: "add_union"
	AddUnion(Collector1 CosCollectionMap, Collector2 CosCollectionMap) (error error)
	//Exceptions for : Equal
	//	CosCollectionElementInvalid
	// Original name: "equal"
	Equal(Collector CosCollectionMap) (result bool, err error)
	//Exceptions for : NotEqual
	//	CosCollectionElementInvalid
	// Original name: "not_equal"
	NotEqual(Collector CosCollectionMap) (result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionMap_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionMapId_Const = "IDL:omg.org/CosCollection/Map:1.0"

func (self CosCollectionMap_Helper) Id() string {
	return CosCollectionMapId_Const
}

func (self CosCollectionMap_Helper) Read(stream __goidl__.IReadAny) (CosCollectionMap, error) {
	return nil, nil
}

func (self CosCollectionMap_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionMap) error {
	return nil
}

// Interface declaration: "CosCollection::Relation", generatedBy by: "WriteInterface"
type CosCollectionRelation interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityKeyCollection
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionRelation_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionRelationId_Const = "IDL:omg.org/CosCollection/Relation:1.0"

func (self CosCollectionRelation_Helper) Id() string {
	return CosCollectionRelationId_Const
}

func (self CosCollectionRelation_Helper) Read(stream __goidl__.IReadAny) (CosCollectionRelation, error) {
	return nil, nil
}

func (self CosCollectionRelation_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionRelation) error {
	return nil
}

// Interface declaration: "CosCollection::Set", generatedBy by: "WriteInterface"
type CosCollectionSet interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityCollection
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionSet_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSetId_Const = "IDL:omg.org/CosCollection/Set:1.0"

func (self CosCollectionSet_Helper) Id() string {
	return CosCollectionSetId_Const
}

func (self CosCollectionSet_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSet, error) {
	return nil, nil
}

func (self CosCollectionSet_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSet) error {
	return nil
}

// Interface declaration: "CosCollection::Bag", generatedBy by: "WriteInterface"
type CosCollectionBag interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityCollection
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionBag_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionBagId_Const = "IDL:omg.org/CosCollection/Bag:1.0"

func (self CosCollectionBag_Helper) Id() string {
	return CosCollectionBagId_Const
}

func (self CosCollectionBag_Helper) Read(stream __goidl__.IReadAny) (CosCollectionBag, error) {
	return nil, nil
}

func (self CosCollectionBag_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionBag) error {
	return nil
}

// Interface declaration: "CosCollection::KeySortedSet", generatedBy by: "WriteInterface"
type CosCollectionKeySortedSet interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionKeySortedCollection
	// Interface operations
	// Original name: "compare"
	Compare(Collector CosCollectionKeySortedSet, Comparison CosCollectionComparator) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeySortedSet_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeySortedSetId_Const = "IDL:omg.org/CosCollection/KeySortedSet:1.0"

func (self CosCollectionKeySortedSet_Helper) Id() string {
	return CosCollectionKeySortedSetId_Const
}

func (self CosCollectionKeySortedSet_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeySortedSet, error) {
	return nil, nil
}

func (self CosCollectionKeySortedSet_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeySortedSet) error {
	return nil
}

// Interface declaration: "CosCollection::KeySortedBag", generatedBy by: "WriteInterface"
type CosCollectionKeySortedBag interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionKeySortedCollection
	// Interface operations
	// Original name: "compare"
	Compare(Collector CosCollectionKeySortedBag, Comparison CosCollectionComparator) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeySortedBag_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeySortedBagId_Const = "IDL:omg.org/CosCollection/KeySortedBag:1.0"

func (self CosCollectionKeySortedBag_Helper) Id() string {
	return CosCollectionKeySortedBagId_Const
}

func (self CosCollectionKeySortedBag_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeySortedBag, error) {
	return nil, nil
}

func (self CosCollectionKeySortedBag_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeySortedBag) error {
	return nil
}

// Interface declaration: "CosCollection::SortedMap", generatedBy by: "WriteInterface"
type CosCollectionSortedMap interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityKeySortedCollection
	// Interface operations
	// Original name: "compare"
	Compare(Collector CosCollectionSortedMap, Comparison CosCollectionComparator) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedMap_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedMapId_Const = "IDL:omg.org/CosCollection/SortedMap:1.0"

func (self CosCollectionSortedMap_Helper) Id() string {
	return CosCollectionSortedMapId_Const
}

func (self CosCollectionSortedMap_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedMap, error) {
	return nil, nil
}

func (self CosCollectionSortedMap_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedMap) error {
	return nil
}

// Interface declaration: "CosCollection::SortedRelation", generatedBy by: "WriteInterface"
type CosCollectionSortedRelation interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualityKeySortedCollection
	// Interface operations
	// Original name: "compare"
	Compare(Collector CosCollectionSortedRelation, Comparison CosCollectionComparator) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedRelation_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedRelationId_Const = "IDL:omg.org/CosCollection/SortedRelation:1.0"

func (self CosCollectionSortedRelation_Helper) Id() string {
	return CosCollectionSortedRelationId_Const
}

func (self CosCollectionSortedRelation_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedRelation, error) {
	return nil, nil
}

func (self CosCollectionSortedRelation_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedRelation) error {
	return nil
}

// Interface declaration: "CosCollection::SortedSet", generatedBy by: "WriteInterface"
type CosCollectionSortedSet interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualitySortedCollection
	// Interface operations
	// Original name: "compare"
	Compare(Collector CosCollectionSortedSet, Comparison CosCollectionComparator) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedSet_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedSetId_Const = "IDL:omg.org/CosCollection/SortedSet:1.0"

func (self CosCollectionSortedSet_Helper) Id() string {
	return CosCollectionSortedSetId_Const
}

func (self CosCollectionSortedSet_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedSet, error) {
	return nil, nil
}

func (self CosCollectionSortedSet_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedSet) error {
	return nil
}

// Interface declaration: "CosCollection::SortedBag", generatedBy by: "WriteInterface"
type CosCollectionSortedBag interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualitySortedCollection
	// Interface operations
	// Original name: "compare"
	Compare(Collector CosCollectionSortedBag, Comparison CosCollectionComparator) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedBag_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedBagId_Const = "IDL:omg.org/CosCollection/SortedBag:1.0"

func (self CosCollectionSortedBag_Helper) Id() string {
	return CosCollectionSortedBagId_Const
}

func (self CosCollectionSortedBag_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedBag, error) {
	return nil, nil
}

func (self CosCollectionSortedBag_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedBag) error {
	return nil
}

// Interface declaration: "CosCollection::CSequence", generatedBy by: "WriteInterface"
type CosCollectionCSequence interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionSequentialCollection
	// Interface operations
	// Original name: "compare"
	Compare(Collector CosCollectionCSequence, Comparison CosCollectionComparator) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionCSequence_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionCSequenceId_Const = "IDL:omg.org/CosCollection/CSequence:1.0"

func (self CosCollectionCSequence_Helper) Id() string {
	return CosCollectionCSequenceId_Const
}

func (self CosCollectionCSequence_Helper) Read(stream __goidl__.IReadAny) (CosCollectionCSequence, error) {
	return nil, nil
}

func (self CosCollectionCSequence_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionCSequence) error {
	return nil
}

// Interface declaration: "CosCollection::EqualitySequence", generatedBy by: "WriteInterface"
type CosCollectionEqualitySequence interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionEqualitySequentialCollection
	// Interface operations
	// Original name: "equal"
	Equal(Collector CosCollectionEqualitySequence) (result bool, err error)
	// Original name: "not_equal"
	NotEqual(Collector CosCollectionEqualitySequence) (result bool, err error)
	// Original name: "compare"
	Compare(Collector CosCollectionEqualitySequence, Comparison CosCollectionComparator) (result int32, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualitySequence_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualitySequenceId_Const = "IDL:omg.org/CosCollection/EqualitySequence:1.0"

func (self CosCollectionEqualitySequence_Helper) Id() string {
	return CosCollectionEqualitySequenceId_Const
}

func (self CosCollectionEqualitySequence_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualitySequence, error) {
	return nil, nil
}

func (self CosCollectionEqualitySequence_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualitySequence) error {
	return nil
}

// Interface declaration: "CosCollection::Heap", generatedBy by: "WriteInterface"
type CosCollectionHeap interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollection
	// Interface operations
}

//noinspection GoSnakeCaseUsage
type CosCollectionHeap_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionHeapId_Const = "IDL:omg.org/CosCollection/Heap:1.0"

func (self CosCollectionHeap_Helper) Id() string {
	return CosCollectionHeapId_Const
}

func (self CosCollectionHeap_Helper) Read(stream __goidl__.IReadAny) (CosCollectionHeap, error) {
	return nil, nil
}

func (self CosCollectionHeap_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionHeap) error {
	return nil
}

// Interface declaration: "CosCollection::RestrictedAccessCollection", generatedBy by: "WriteInterface"
type CosCollectionRestrictedAccessCollection interface {
	// Interface operations
	// Original name: "unfilled"
	Unfilled() (result bool, err error)
	// Original name: "size"
	Size() (result uint32, err error)
	// Original name: "purge"
	Purge() (error error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionRestrictedAccessCollection_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionRestrictedAccessCollectionId_Const = "IDL:omg.org/CosCollection/RestrictedAccessCollection:1.0"

func (self CosCollectionRestrictedAccessCollection_Helper) Id() string {
	return CosCollectionRestrictedAccessCollectionId_Const
}

func (self CosCollectionRestrictedAccessCollection_Helper) Read(stream __goidl__.IReadAny) (CosCollectionRestrictedAccessCollection, error) {
	return nil, nil
}

func (self CosCollectionRestrictedAccessCollection_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionRestrictedAccessCollection) error {
	return nil
}

// Interface declaration: "CosCollection::Queue", generatedBy by: "WriteInterface"
type CosCollectionQueue interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRestrictedAccessCollection
	// Interface operations
	//Exceptions for : Enqueue
	//	CosCollectionElementInvalid
	// Original name: "enqueue"
	Enqueue(Element __goidl__.IdlAny) (error error)
	//Exceptions for : Dequeue
	//	CosCollectionEmptyCollection
	// Original name: "dequeue"
	Dequeue() (error error)
	//Exceptions for : ElementDequeue
	//	CosCollectionEmptyCollection
	// Original name: "element_dequeue"
	ElementDequeue() (Element __goidl__.IdlAny, result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionQueue_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionQueueId_Const = "IDL:omg.org/CosCollection/Queue:1.0"

func (self CosCollectionQueue_Helper) Id() string {
	return CosCollectionQueueId_Const
}

func (self CosCollectionQueue_Helper) Read(stream __goidl__.IReadAny) (CosCollectionQueue, error) {
	return nil, nil
}

func (self CosCollectionQueue_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionQueue) error {
	return nil
}

// Interface declaration: "CosCollection::Deque", generatedBy by: "WriteInterface"
type CosCollectionDeque interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRestrictedAccessCollection
	// Interface operations
	//Exceptions for : EnqueueAsFirst
	//	CosCollectionElementInvalid
	// Original name: "enqueue_as_first"
	EnqueueAsFirst(Element __goidl__.IdlAny) (error error)
	//Exceptions for : EnqueueAsLast
	//	CosCollectionElementInvalid
	// Original name: "enqueue_as_last"
	EnqueueAsLast(Element __goidl__.IdlAny) (error error)
	//Exceptions for : DequeueFirst
	//	CosCollectionEmptyCollection
	// Original name: "dequeue_first"
	DequeueFirst() (error error)
	//Exceptions for : ElementDequeueFirst
	//	CosCollectionEmptyCollection
	// Original name: "element_dequeue_first"
	ElementDequeueFirst() (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : DequeueLast
	//	CosCollectionEmptyCollection
	// Original name: "dequeue_last"
	DequeueLast() (error error)
	//Exceptions for : ElementDequeueLast
	//	CosCollectionEmptyCollection
	// Original name: "element_dequeue_last"
	ElementDequeueLast() (Element __goidl__.IdlAny, result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionDeque_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionDequeId_Const = "IDL:omg.org/CosCollection/Deque:1.0"

func (self CosCollectionDeque_Helper) Id() string {
	return CosCollectionDequeId_Const
}

func (self CosCollectionDeque_Helper) Read(stream __goidl__.IReadAny) (CosCollectionDeque, error) {
	return nil, nil
}

func (self CosCollectionDeque_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionDeque) error {
	return nil
}

// Interface declaration: "CosCollection::Stack", generatedBy by: "WriteInterface"
type CosCollectionStack interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRestrictedAccessCollection
	// Interface operations
	//Exceptions for : Push
	//	CosCollectionElementInvalid
	// Original name: "push"
	Push(Element __goidl__.IdlAny) (error error)
	//Exceptions for : Pop
	//	CosCollectionEmptyCollection
	// Original name: "pop"
	Pop() (error error)
	//Exceptions for : ElementPop
	//	CosCollectionEmptyCollection
	// Original name: "element_pop"
	ElementPop() (Element __goidl__.IdlAny, result bool, err error)
	//Exceptions for : Top
	//	CosCollectionEmptyCollection
	// Original name: "top"
	Top() (Element __goidl__.IdlAny, result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionStack_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionStackId_Const = "IDL:omg.org/CosCollection/Stack:1.0"

func (self CosCollectionStack_Helper) Id() string {
	return CosCollectionStackId_Const
}

func (self CosCollectionStack_Helper) Read(stream __goidl__.IReadAny) (CosCollectionStack, error) {
	return nil, nil
}

func (self CosCollectionStack_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionStack) error {
	return nil
}

// Interface declaration: "CosCollection::PriorityQueue", generatedBy by: "WriteInterface"
type CosCollectionPriorityQueue interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRestrictedAccessCollection
	// Interface operations
	//Exceptions for : Enqueue
	//	CosCollectionElementInvalid
	// Original name: "enqueue"
	Enqueue(Element __goidl__.IdlAny) (error error)
	//Exceptions for : Dequeue
	//	CosCollectionEmptyCollection
	// Original name: "dequeue"
	Dequeue() (error error)
	//Exceptions for : ElementDequeue
	//	CosCollectionEmptyCollection
	// Original name: "element_dequeue"
	ElementDequeue() (Element __goidl__.IdlAny, result bool, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionPriorityQueue_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionPriorityQueueId_Const = "IDL:omg.org/CosCollection/PriorityQueue:1.0"

func (self CosCollectionPriorityQueue_Helper) Id() string {
	return CosCollectionPriorityQueueId_Const
}

func (self CosCollectionPriorityQueue_Helper) Read(stream __goidl__.IReadAny) (CosCollectionPriorityQueue, error) {
	return nil, nil
}

func (self CosCollectionPriorityQueue_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionPriorityQueue) error {
	return nil
}

// Interface declaration: "CosCollection::CollectionFactory", generatedBy by: "WriteInterface"
type CosCollectionCollectionFactory interface {
	// Interface operations
	//Exceptions for : GenericCreate
	//	CosCollectionParameterInvalid
	// Original name: "generic_create"
	GenericCreate(Parameters CosCollectionParameterList) (result CosCollectionCollection, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionCollectionFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionCollectionFactoryId_Const = "IDL:omg.org/CosCollection/CollectionFactory:1.0"

func (self CosCollectionCollectionFactory_Helper) Id() string {
	return CosCollectionCollectionFactoryId_Const
}

func (self CosCollectionCollectionFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionCollectionFactory, error) {
	return nil, nil
}

func (self CosCollectionCollectionFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionCollectionFactory) error {
	return nil
}

// Interface declaration: "CosCollection::CollectionFactories", generatedBy by: "WriteInterface"
type CosCollectionCollectionFactories interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "add_factory"
	AddFactory(CollectionInterface string, ImplCategory string, ImplInterface string, Factory CosCollectionCollectionFactory) (result bool, err error)
	// Original name: "remove_factory"
	RemoveFactory(CollectionInterface string, ImplCategory string, ImplInterface string) (result bool, err error)
	//Exceptions for : Create
	//	CosCollectionParameterInvalid
	// Original name: "create"
	Create(Parameters CosCollectionParameterList) (result CosCollectionCollection, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionCollectionFactories_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionCollectionFactoriesId_Const = "IDL:omg.org/CosCollection/CollectionFactories:1.0"

func (self CosCollectionCollectionFactories_Helper) Id() string {
	return CosCollectionCollectionFactoriesId_Const
}

func (self CosCollectionCollectionFactories_Helper) Read(stream __goidl__.IReadAny) (CosCollectionCollectionFactories, error) {
	return nil, nil
}

func (self CosCollectionCollectionFactories_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionCollectionFactories) error {
	return nil
}

// Interface declaration: "CosCollection::RACollectionFactory", generatedBy by: "WriteInterface"
type CosCollectionRACollectionFactory interface {
	// Interface operations
	//Exceptions for : GenericCreate
	//	CosCollectionParameterInvalid
	// Original name: "generic_create"
	GenericCreate(Parameters CosCollectionParameterList) (result CosCollectionRestrictedAccessCollection, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionRACollectionFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionRACollectionFactoryId_Const = "IDL:omg.org/CosCollection/RACollectionFactory:1.0"

func (self CosCollectionRACollectionFactory_Helper) Id() string {
	return CosCollectionRACollectionFactoryId_Const
}

func (self CosCollectionRACollectionFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionRACollectionFactory, error) {
	return nil, nil
}

func (self CosCollectionRACollectionFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionRACollectionFactory) error {
	return nil
}

// Interface declaration: "CosCollection::RACollectionFactories", generatedBy by: "WriteInterface"
type CosCollectionRACollectionFactories interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRACollectionFactory
	// Interface operations
	// Original name: "add_factory"
	AddFactory(CollectionInterface string, ImplCategory string, ImplInterface string, Factory CosCollectionRACollectionFactory) (result bool, err error)
	// Original name: "remove_factory"
	RemoveFactory(CollectionInterface string, ImplCategory string, ImplInterface string) (result bool, err error)
	//Exceptions for : Create
	//	CosCollectionParameterInvalid
	// Original name: "create"
	Create(Parameters CosCollectionParameterList) (result CosCollectionCollection, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionRACollectionFactories_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionRACollectionFactoriesId_Const = "IDL:omg.org/CosCollection/RACollectionFactories:1.0"

func (self CosCollectionRACollectionFactories_Helper) Id() string {
	return CosCollectionRACollectionFactoriesId_Const
}

func (self CosCollectionRACollectionFactories_Helper) Read(stream __goidl__.IReadAny) (CosCollectionRACollectionFactories, error) {
	return nil, nil
}

func (self CosCollectionRACollectionFactories_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionRACollectionFactories) error {
	return nil
}

// Interface declaration: "CosCollection::KeySetFactory", generatedBy by: "WriteInterface"
type CosCollectionKeySetFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionKeySet, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeySetFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeySetFactoryId_Const = "IDL:omg.org/CosCollection/KeySetFactory:1.0"

func (self CosCollectionKeySetFactory_Helper) Id() string {
	return CosCollectionKeySetFactoryId_Const
}

func (self CosCollectionKeySetFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeySetFactory, error) {
	return nil, nil
}

func (self CosCollectionKeySetFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeySetFactory) error {
	return nil
}

// Interface declaration: "CosCollection::KeyBagFactory", generatedBy by: "WriteInterface"
type CosCollectionKeyBagFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionKeyBag, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeyBagFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeyBagFactoryId_Const = "IDL:omg.org/CosCollection/KeyBagFactory:1.0"

func (self CosCollectionKeyBagFactory_Helper) Id() string {
	return CosCollectionKeyBagFactoryId_Const
}

func (self CosCollectionKeyBagFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeyBagFactory, error) {
	return nil, nil
}

func (self CosCollectionKeyBagFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeyBagFactory) error {
	return nil
}

// Interface declaration: "CosCollection::MapFactory", generatedBy by: "WriteInterface"
type CosCollectionMapFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionMap, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionMapFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionMapFactoryId_Const = "IDL:omg.org/CosCollection/MapFactory:1.0"

func (self CosCollectionMapFactory_Helper) Id() string {
	return CosCollectionMapFactoryId_Const
}

func (self CosCollectionMapFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionMapFactory, error) {
	return nil, nil
}

func (self CosCollectionMapFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionMapFactory) error {
	return nil
}

// Interface declaration: "CosCollection::RelationFactory", generatedBy by: "WriteInterface"
type CosCollectionRelationFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionRelation, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionRelationFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionRelationFactoryId_Const = "IDL:omg.org/CosCollection/RelationFactory:1.0"

func (self CosCollectionRelationFactory_Helper) Id() string {
	return CosCollectionRelationFactoryId_Const
}

func (self CosCollectionRelationFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionRelationFactory, error) {
	return nil, nil
}

func (self CosCollectionRelationFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionRelationFactory) error {
	return nil
}

// Interface declaration: "CosCollection::SetFactory", generatedBy by: "WriteInterface"
type CosCollectionSetFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionSet, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSetFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSetFactoryId_Const = "IDL:omg.org/CosCollection/SetFactory:1.0"

func (self CosCollectionSetFactory_Helper) Id() string {
	return CosCollectionSetFactoryId_Const
}

func (self CosCollectionSetFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSetFactory, error) {
	return nil, nil
}

func (self CosCollectionSetFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSetFactory) error {
	return nil
}

// Interface declaration: "CosCollection::BagFactory", generatedBy by: "WriteInterface"
type CosCollectionBagFactory interface {
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionBag, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionBagFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionBagFactoryId_Const = "IDL:omg.org/CosCollection/BagFactory:1.0"

func (self CosCollectionBagFactory_Helper) Id() string {
	return CosCollectionBagFactoryId_Const
}

func (self CosCollectionBagFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionBagFactory, error) {
	return nil, nil
}

func (self CosCollectionBagFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionBagFactory) error {
	return nil
}

// Interface declaration: "CosCollection::KeySortedSetFactory", generatedBy by: "WriteInterface"
type CosCollectionKeySortedSetFactory interface {
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionKeySortedSet, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeySortedSetFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeySortedSetFactoryId_Const = "IDL:omg.org/CosCollection/KeySortedSetFactory:1.0"

func (self CosCollectionKeySortedSetFactory_Helper) Id() string {
	return CosCollectionKeySortedSetFactoryId_Const
}

func (self CosCollectionKeySortedSetFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeySortedSetFactory, error) {
	return nil, nil
}

func (self CosCollectionKeySortedSetFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeySortedSetFactory) error {
	return nil
}

// Interface declaration: "CosCollection::KeySortedBagFactory", generatedBy by: "WriteInterface"
type CosCollectionKeySortedBagFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionKeySortedBag, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionKeySortedBagFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionKeySortedBagFactoryId_Const = "IDL:omg.org/CosCollection/KeySortedBagFactory:1.0"

func (self CosCollectionKeySortedBagFactory_Helper) Id() string {
	return CosCollectionKeySortedBagFactoryId_Const
}

func (self CosCollectionKeySortedBagFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionKeySortedBagFactory, error) {
	return nil, nil
}

func (self CosCollectionKeySortedBagFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionKeySortedBagFactory) error {
	return nil
}

// Interface declaration: "CosCollection::SortedMapFactory", generatedBy by: "WriteInterface"
type CosCollectionSortedMapFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionSortedMap, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedMapFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedMapFactoryId_Const = "IDL:omg.org/CosCollection/SortedMapFactory:1.0"

func (self CosCollectionSortedMapFactory_Helper) Id() string {
	return CosCollectionSortedMapFactoryId_Const
}

func (self CosCollectionSortedMapFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedMapFactory, error) {
	return nil, nil
}

func (self CosCollectionSortedMapFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedMapFactory) error {
	return nil
}

// Interface declaration: "CosCollection::SortedRelationFactory", generatedBy by: "WriteInterface"
type CosCollectionSortedRelationFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionSortedRelation, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedRelationFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedRelationFactoryId_Const = "IDL:omg.org/CosCollection/SortedRelationFactory:1.0"

func (self CosCollectionSortedRelationFactory_Helper) Id() string {
	return CosCollectionSortedRelationFactoryId_Const
}

func (self CosCollectionSortedRelationFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedRelationFactory, error) {
	return nil, nil
}

func (self CosCollectionSortedRelationFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedRelationFactory) error {
	return nil
}

// Interface declaration: "CosCollection::SortedSetFactory", generatedBy by: "WriteInterface"
type CosCollectionSortedSetFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionSortedSet, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedSetFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedSetFactoryId_Const = "IDL:omg.org/CosCollection/SortedSetFactory:1.0"

func (self CosCollectionSortedSetFactory_Helper) Id() string {
	return CosCollectionSortedSetFactoryId_Const
}

func (self CosCollectionSortedSetFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedSetFactory, error) {
	return nil, nil
}

func (self CosCollectionSortedSetFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedSetFactory) error {
	return nil
}

// Interface declaration: "CosCollection::SortedBagFactory", generatedBy by: "WriteInterface"
type CosCollectionSortedBagFactory interface {
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionSortedBag, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSortedBagFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSortedBagFactoryId_Const = "IDL:omg.org/CosCollection/SortedBagFactory:1.0"

func (self CosCollectionSortedBagFactory_Helper) Id() string {
	return CosCollectionSortedBagFactoryId_Const
}

func (self CosCollectionSortedBagFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSortedBagFactory, error) {
	return nil, nil
}

func (self CosCollectionSortedBagFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSortedBagFactory) error {
	return nil
}

// Interface declaration: "CosCollection::SequenceFactory", generatedBy by: "WriteInterface"
type CosCollectionSequenceFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionCSequence, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionSequenceFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionSequenceFactoryId_Const = "IDL:omg.org/CosCollection/SequenceFactory:1.0"

func (self CosCollectionSequenceFactory_Helper) Id() string {
	return CosCollectionSequenceFactoryId_Const
}

func (self CosCollectionSequenceFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionSequenceFactory, error) {
	return nil, nil
}

func (self CosCollectionSequenceFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionSequenceFactory) error {
	return nil
}

// Interface declaration: "CosCollection::EqualitySequenceFactory", generatedBy by: "WriteInterface"
type CosCollectionEqualitySequenceFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionEqualitySequence, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionEqualitySequenceFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionEqualitySequenceFactoryId_Const = "IDL:omg.org/CosCollection/EqualitySequenceFactory:1.0"

func (self CosCollectionEqualitySequenceFactory_Helper) Id() string {
	return CosCollectionEqualitySequenceFactoryId_Const
}

func (self CosCollectionEqualitySequenceFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionEqualitySequenceFactory, error) {
	return nil, nil
}

func (self CosCollectionEqualitySequenceFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionEqualitySequenceFactory) error {
	return nil
}

// Interface declaration: "CosCollection::HeapFactory", generatedBy by: "WriteInterface"
type CosCollectionHeapFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionCollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionHeap, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionHeapFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionHeapFactoryId_Const = "IDL:omg.org/CosCollection/HeapFactory:1.0"

func (self CosCollectionHeapFactory_Helper) Id() string {
	return CosCollectionHeapFactoryId_Const
}

func (self CosCollectionHeapFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionHeapFactory, error) {
	return nil, nil
}

func (self CosCollectionHeapFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionHeapFactory) error {
	return nil
}

// Interface declaration: "CosCollection::QueueFactory", generatedBy by: "WriteInterface"
type CosCollectionQueueFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRACollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionQueue, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionQueueFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionQueueFactoryId_Const = "IDL:omg.org/CosCollection/QueueFactory:1.0"

func (self CosCollectionQueueFactory_Helper) Id() string {
	return CosCollectionQueueFactoryId_Const
}

func (self CosCollectionQueueFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionQueueFactory, error) {
	return nil, nil
}

func (self CosCollectionQueueFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionQueueFactory) error {
	return nil
}

// Interface declaration: "CosCollection::StackFactory", generatedBy by: "WriteInterface"
type CosCollectionStackFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRACollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionStack, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionStackFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionStackFactoryId_Const = "IDL:omg.org/CosCollection/StackFactory:1.0"

func (self CosCollectionStackFactory_Helper) Id() string {
	return CosCollectionStackFactoryId_Const
}

func (self CosCollectionStackFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionStackFactory, error) {
	return nil, nil
}

func (self CosCollectionStackFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionStackFactory) error {
	return nil
}

// Interface declaration: "CosCollection::DequeFactory", generatedBy by: "WriteInterface"
type CosCollectionDequeFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRACollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionDeque, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionDequeFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionDequeFactoryId_Const = "IDL:omg.org/CosCollection/DequeFactory:1.0"

func (self CosCollectionDequeFactory_Helper) Id() string {
	return CosCollectionDequeFactoryId_Const
}

func (self CosCollectionDequeFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionDequeFactory, error) {
	return nil, nil
}

func (self CosCollectionDequeFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionDequeFactory) error {
	return nil
}

// Interface declaration: "CosCollection::PriorityQueueFactory", generatedBy by: "WriteInterface"
type CosCollectionPriorityQueueFactory interface {
	//No duplicate operations found in the base interfaces.
	CosCollectionRACollectionFactory
	// Interface operations
	// Original name: "create"
	Create(Ops CosCollectionOperations, ExpectedSize uint32) (result CosCollectionPriorityQueue, err error)
}

//noinspection GoSnakeCaseUsage
type CosCollectionPriorityQueueFactory_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosCollectionPriorityQueueFactoryId_Const = "IDL:omg.org/CosCollection/PriorityQueueFactory:1.0"

func (self CosCollectionPriorityQueueFactory_Helper) Id() string {
	return CosCollectionPriorityQueueFactoryId_Const
}

func (self CosCollectionPriorityQueueFactory_Helper) Read(stream __goidl__.IReadAny) (CosCollectionPriorityQueueFactory, error) {
	return nil, nil
}

func (self CosCollectionPriorityQueueFactory_Helper) Write(stream __goidl__.IWriteAny, v CosCollectionPriorityQueueFactory) error {
	return nil
}


//noinspection GoUnusedGlobalVariable
var CosCollectionAnySequenceHelper = CosCollectionAnySequence_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionIstringHelper = CosCollectionIstring_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionNVPairHelper = CosCollectionNVPair_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionParameterListHelper = CosCollectionParameterList_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEmptyCollectionHelper = CosCollectionEmptyCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionPositionInvalidHelper = CosCollectionPositionInvalid_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionIteratorInvalidReasonHelper = CosCollectionIteratorInvalidReason_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionIteratorInvalidHelper = CosCollectionIteratorInvalid_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionIteratorInBetweenHelper = CosCollectionIteratorInBetween_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionElementInvalidReasonHelper = CosCollectionElementInvalidReason_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionElementInvalidHelper = CosCollectionElementInvalid_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeyInvalidHelper = CosCollectionKeyInvalid_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionParameterInvalidHelper = CosCollectionParameterInvalid_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionOperationsHelper = CosCollectionOperations_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionCommandHelper = CosCollectionCommand_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionComparatorHelper = CosCollectionComparator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionIteratorHelper = CosCollectionIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionOrderedIteratorHelper = CosCollectionOrderedIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSequentialIteratorHelper = CosCollectionSequentialIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeyIteratorHelper = CosCollectionKeyIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualityIteratorHelper = CosCollectionEqualityIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualityKeyIteratorHelper = CosCollectionEqualityKeyIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedIteratorHelper = CosCollectionSortedIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionLowerBoundStyleHelper = CosCollectionLowerBoundStyle_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionUpperBoundStyleHelper = CosCollectionUpperBoundStyle_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeySortedIteratorHelper = CosCollectionKeySortedIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualitySortedIteratorHelper = CosCollectionEqualitySortedIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualityKeySortedIteratorHelper = CosCollectionEqualityKeySortedIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualitySequentialIteratorHelper = CosCollectionEqualitySequentialIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionCollectionHelper = CosCollectionCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionOrderedCollectionHelper = CosCollectionOrderedCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSequentialCollectionHelper = CosCollectionSequentialCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedCollectionHelper = CosCollectionSortedCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualityCollectionHelper = CosCollectionEqualityCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeyCollectionHelper = CosCollectionKeyCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualityKeyCollectionHelper = CosCollectionEqualityKeyCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeySortedCollectionHelper = CosCollectionKeySortedCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualitySortedCollectionHelper = CosCollectionEqualitySortedCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualityKeySortedCollectionHelper = CosCollectionEqualityKeySortedCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualitySequentialCollectionHelper = CosCollectionEqualitySequentialCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeySetHelper = CosCollectionKeySet_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeyBagHelper = CosCollectionKeyBag_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionMapHelper = CosCollectionMap_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionRelationHelper = CosCollectionRelation_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSetHelper = CosCollectionSet_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionBagHelper = CosCollectionBag_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeySortedSetHelper = CosCollectionKeySortedSet_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeySortedBagHelper = CosCollectionKeySortedBag_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedMapHelper = CosCollectionSortedMap_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedRelationHelper = CosCollectionSortedRelation_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedSetHelper = CosCollectionSortedSet_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedBagHelper = CosCollectionSortedBag_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionCSequenceHelper = CosCollectionCSequence_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualitySequenceHelper = CosCollectionEqualitySequence_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionHeapHelper = CosCollectionHeap_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionRestrictedAccessCollectionHelper = CosCollectionRestrictedAccessCollection_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionQueueHelper = CosCollectionQueue_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionDequeHelper = CosCollectionDeque_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionStackHelper = CosCollectionStack_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionPriorityQueueHelper = CosCollectionPriorityQueue_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionCollectionFactoryHelper = CosCollectionCollectionFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionCollectionFactoriesHelper = CosCollectionCollectionFactories_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionRACollectionFactoryHelper = CosCollectionRACollectionFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionRACollectionFactoriesHelper = CosCollectionRACollectionFactories_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeySetFactoryHelper = CosCollectionKeySetFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeyBagFactoryHelper = CosCollectionKeyBagFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionMapFactoryHelper = CosCollectionMapFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionRelationFactoryHelper = CosCollectionRelationFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSetFactoryHelper = CosCollectionSetFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionBagFactoryHelper = CosCollectionBagFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeySortedSetFactoryHelper = CosCollectionKeySortedSetFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionKeySortedBagFactoryHelper = CosCollectionKeySortedBagFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedMapFactoryHelper = CosCollectionSortedMapFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedRelationFactoryHelper = CosCollectionSortedRelationFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedSetFactoryHelper = CosCollectionSortedSetFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSortedBagFactoryHelper = CosCollectionSortedBagFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionSequenceFactoryHelper = CosCollectionSequenceFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionEqualitySequenceFactoryHelper = CosCollectionEqualitySequenceFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionHeapFactoryHelper = CosCollectionHeapFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionQueueFactoryHelper = CosCollectionQueueFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionStackFactoryHelper = CosCollectionStackFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionDequeFactoryHelper = CosCollectionDequeFactory_Helper{}

//noinspection GoUnusedGlobalVariable
var CosCollectionPriorityQueueFactoryHelper = CosCollectionPriorityQueueFactory_Helper{}

func init() {
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosCollectionNVPairId_Const,
			__yaccidl__.IdlStruct,
			"CosCollection.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosCollectionNVPair()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCosCollectionNVPair(generator)
			},
			__reflect__.TypeOf((*CosCollectionNVPair)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosCollectionEmptyCollectionId_Const,
			__yaccidl__.IdlStruct,
			"CosCollection.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosCollectionEmptyCollection()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCosCollectionEmptyCollection()
			},
			__reflect__.TypeOf((*CosCollectionEmptyCollection)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosCollectionPositionInvalidId_Const,
			__yaccidl__.IdlStruct,
			"CosCollection.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosCollectionPositionInvalid()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCosCollectionPositionInvalid()
			},
			__reflect__.TypeOf((*CosCollectionPositionInvalid)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosCollectionIteratorInvalidId_Const,
			__yaccidl__.IdlStruct,
			"CosCollection.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosCollectionIteratorInvalid()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCosCollectionIteratorInvalid(generator)
			},
			__reflect__.TypeOf((*CosCollectionIteratorInvalid)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosCollectionIteratorInBetweenId_Const,
			__yaccidl__.IdlStruct,
			"CosCollection.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosCollectionIteratorInBetween()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCosCollectionIteratorInBetween()
			},
			__reflect__.TypeOf((*CosCollectionIteratorInBetween)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosCollectionElementInvalidId_Const,
			__yaccidl__.IdlStruct,
			"CosCollection.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosCollectionElementInvalid()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCosCollectionElementInvalid(generator)
			},
			__reflect__.TypeOf((*CosCollectionElementInvalid)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosCollectionKeyInvalidId_Const,
			__yaccidl__.IdlStruct,
			"CosCollection.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosCollectionKeyInvalid()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCosCollectionKeyInvalid()
			},
			__reflect__.TypeOf((*CosCollectionKeyInvalid)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosCollectionParameterInvalidId_Const,
			__yaccidl__.IdlStruct,
			"CosCollection.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosCollectionParameterInvalid()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCosCollectionParameterInvalid(generator)
			},
			__reflect__.TypeOf((*CosCollectionParameterInvalid)(nil))))
}
