// Code generated by me. DO NOT EDIT.

package omg

import __fmt__ "fmt"
import __goidl__ "github.com/bhbosman/goidl"
import __json__ "encoding/json"
import __reflect__ "reflect"
import __yaccidl__ "github.com/bhbosman/yaccidl"

// TypeDef declaration: "CosNaming::Istring", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CosNaming::Istring" from: "string"
type CosNamingIstring string

//noinspection GoSnakeCaseUsage
type CosNamingIstring_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingIstringId_Const = "IDL:omg.org/CosNaming/Istring:1.0"

func (self CosNamingIstring_Helper) Id() string {
	return CosNamingIstringId_Const
}

func (self CosNamingIstring_Helper) Read(stream __goidl__.IReadAny) (string, error) {
	result, err := __goidl__.IdlStringHelper.Read(stream)
	return result, err
}

func (self CosNamingIstring_Helper) Write(stream __goidl__.IWriteAny, v string) error {
	return __goidl__.IdlStringHelper.Write(stream, v)
}

// Struct declaration: "CosNaming::NameComponent", generatedBy by: "WriteStructDcl"
// Exception Decl: false
type CosNamingNameComponent struct {
	__goidl__.IdlObject
	Id string `json:"Id"`
	Kind string `json:"Kind"`
}

//noinspection GoSnakeCaseUsage
const CosNamingNameComponentId_Const = "IDL:omg.org/CosNaming/NameComponent:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosNamingNameComponent() *CosNamingNameComponent {
	//noinspection GoRedundantConversion
	return &CosNamingNameComponent{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNameComponentId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "id", Type: "CosNaming::Istring" Scope: "IdlTypedef"
		Id: "",
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "kind", Type: "CosNaming::Istring" Scope: "IdlTypedef"
		Kind: "",
	}
}

//noinspection GoUnusedExportedFunction
func NewCosNamingNameComponent(
	//"StructDclAllParamsConstructorParamService"
	Id string,
	//"StructDclAllParamsConstructorParamService"
	Kind string) *CosNamingNameComponent {
	//noinspection GoRedundantConversion
	return &CosNamingNameComponent{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNameComponentId_Const,
		},
		Id: Id,
		Kind: Kind,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosNamingNameComponent(randomGenerator __goidl__.IRandomDataGenerator) *CosNamingNameComponent {
	//noinspection GoRedundantConversion
	return &CosNamingNameComponent{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNameComponentId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "id", Type: "CosNaming::Istring" Scope: "IdlTypedef"
		Id: randomGenerator.StringTypeValue(__reflect__.TypeOf((*CosNamingNameComponent)(nil)), "Id"),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "kind", Type: "CosNaming::Istring" Scope: "IdlTypedef"
		Kind: randomGenerator.StringTypeValue(__reflect__.TypeOf((*CosNamingNameComponent)(nil)), "Kind"),
	}
}

func (self *CosNamingNameComponent) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNamingNameComponent) GoString() string {
	return self.String()
}

func (self *CosNamingNameComponent) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(StringType)
	self.Id, err = __goidl__.IdlStringHelper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(StringType)
	self.Kind, err = __goidl__.IdlStringHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNameComponent) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNameComponent) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(StringType)
	err = __goidl__.IdlStringHelper.Write(stream, self.Id)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(StringType)
	err = __goidl__.IdlStringHelper.Write(stream, self.Kind)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNamingNameComponent_Helper struct {
}

// TypeDef declaration: "CosNaming::Name", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CosNaming::Name
type CosNamingName []*CosNamingNameComponent

//noinspection GoSnakeCaseUsage
type CosNamingName_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingNameId_Const = "IDL:omg.org/CosNaming/Name:1.0"

func (self CosNamingName_Helper) Id() string {
	return CosNamingNameId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CosNamingName_Helper) Read(stream __goidl__.IReadAny) (CosNamingName, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CosNamingName, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i] = NewDefaultCosNamingNameComponent()
			err = result[i].Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CosNamingName_Helper) Write(stream __goidl__.IWriteAny, v CosNamingName) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = item.Write(stream)
		if err != nil {
			return err
		}
	}
	return err
}

// Enum declaration: "CosNaming::BindingType", generatedBy by: "WriteEnumDcl"
type CosNamingBindingType uint32

//noinspection GoUnusedConst
const (
	CosNamingBindingTypeNobject  CosNamingBindingType = 0
	CosNamingBindingTypeNcontext CosNamingBindingType = 1
)

//noinspection GoSnakeCaseUsage
type CosNamingBindingType_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingBindingTypeId_Const = "IDL:omg.org/CosNaming/BindingType:1.0"

func (self CosNamingBindingType_Helper) Id() string {
	return CosNamingBindingTypeId_Const
}

func (self CosNamingBindingType_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CosNamingBindingType_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// Struct declaration: "CosNaming::Binding", generatedBy by: "WriteStructDcl"
// Exception Decl: false
type CosNamingBinding struct {
	__goidl__.IdlObject
	BindingName CosNamingName `json:"BindingName"`
	BindingType uint32 `json:"BindingType"`
}

//noinspection GoSnakeCaseUsage
const CosNamingBindingId_Const = "IDL:omg.org/CosNaming/Binding:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosNamingBinding() *CosNamingBinding {
	//noinspection GoRedundantConversion
	return &CosNamingBinding{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingBindingId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "binding_name", Type: "CosNaming::Name" Scope: "IdlTypedef"
		BindingName: CosNamingName(nil),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "binding_type", Type: "CosNaming::BindingType" Scope: "IdlEnum"
		BindingType: 0,
	}
}

//noinspection GoUnusedExportedFunction
func NewCosNamingBinding(
	//"StructDclAllParamsConstructorParamService"
	BindingName CosNamingName,
	//"StructDclAllParamsConstructorParamService"
	BindingType uint32) *CosNamingBinding {
	//noinspection GoRedundantConversion
	return &CosNamingBinding{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingBindingId_Const,
		},
		BindingName: BindingName,
		BindingType: BindingType,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosNamingBinding(randomGenerator __goidl__.IRandomDataGenerator) *CosNamingBinding {
	//noinspection GoRedundantConversion
	return &CosNamingBinding{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingBindingId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "binding_name", Type: "CosNaming::Name" Scope: "IdlTypedef"
		BindingName: CosNamingName(nil),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "binding_type", Type: "CosNaming::BindingType" Scope: "IdlEnum"
		BindingType: randomGenerator.EnumTypeValue(__reflect__.TypeOf((*CosNamingBinding)(nil)), "BindingType"),
	}
}

func (self *CosNamingBinding) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNamingBinding) GoString() string {
	return self.String()
}

func (self *CosNamingBinding) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlSequence)
	self.BindingName, err = CosNamingNameHelper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlEnum)
	self.BindingType, err = __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingBinding) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingBinding) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlSequence)
	err = CosNamingNameHelper.Write(stream, self.BindingName)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlEnum)
	err = __goidl__.IdlUInt32Helper.Write(stream, self.BindingType)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNamingBinding_Helper struct {
}

// TypeDef declaration: "CosNaming::BindingList", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CosNaming::BindingList
type CosNamingBindingList []*CosNamingBinding

//noinspection GoSnakeCaseUsage
type CosNamingBindingList_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingBindingListId_Const = "IDL:omg.org/CosNaming/BindingList:1.0"

func (self CosNamingBindingList_Helper) Id() string {
	return CosNamingBindingListId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CosNamingBindingList_Helper) Read(stream __goidl__.IReadAny) (CosNamingBindingList, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CosNamingBindingList, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i] = NewDefaultCosNamingBinding()
			err = result[i].Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CosNamingBindingList_Helper) Write(stream __goidl__.IWriteAny, v CosNamingBindingList) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = item.Write(stream)
		if err != nil {
			return err
		}
	}
	return err
}

// Enum declaration: "CosNaming::NamingContext::NotFoundReason", generatedBy by: "WriteEnumDcl"
type CosNamingNamingContextNotFoundReason uint32

//noinspection GoUnusedConst
const (
	CosNamingNamingContextNotFoundReasonMissingNode CosNamingNamingContextNotFoundReason = 0
	CosNamingNamingContextNotFoundReasonNotContext  CosNamingNamingContextNotFoundReason = 1
	CosNamingNamingContextNotFoundReasonNotObject   CosNamingNamingContextNotFoundReason = 2
)

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextNotFoundReason_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextNotFoundReasonId_Const = "IDL:omg.org/CosNaming/NamingContext/NotFoundReason:1.0"

func (self CosNamingNamingContextNotFoundReason_Helper) Id() string {
	return CosNamingNamingContextNotFoundReasonId_Const
}

func (self CosNamingNamingContextNotFoundReason_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CosNamingNamingContextNotFoundReason_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// Exception declaration: "CosNaming::NamingContext::NotFound", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosNamingNamingContextNotFound struct {
	__goidl__.IdlObject
	Why uint32 `json:"Why"`
	RestOfName CosNamingName `json:"RestOfName"`
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextNotFoundId_Const = "IDL:omg.org/CosNaming/NamingContext/NotFound:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosNamingNamingContextNotFound() *CosNamingNamingContextNotFound {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextNotFound{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextNotFoundId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "why", Type: "CosNaming::NamingContext::NotFoundReason" Scope: "IdlEnum"
		Why: 0,
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "rest_of_name", Type: "CosNaming::Name" Scope: "IdlTypedef"
		RestOfName: CosNamingName(nil),
	}
}

//noinspection GoUnusedExportedFunction
func NewCosNamingNamingContextNotFound(
	//"StructDclAllParamsConstructorParamService"
	Why uint32,
	//"StructDclAllParamsConstructorParamService"
	RestOfName CosNamingName) *CosNamingNamingContextNotFound {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextNotFound{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextNotFoundId_Const,
		},
		Why: Why,
		RestOfName: RestOfName,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosNamingNamingContextNotFound(randomGenerator __goidl__.IRandomDataGenerator) *CosNamingNamingContextNotFound {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextNotFound{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextNotFoundId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "why", Type: "CosNaming::NamingContext::NotFoundReason" Scope: "IdlEnum"
		Why: randomGenerator.EnumTypeValue(__reflect__.TypeOf((*CosNamingNamingContextNotFound)(nil)), "Why"),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "rest_of_name", Type: "CosNaming::Name" Scope: "IdlTypedef"
		RestOfName: CosNamingName(nil),
	}
}

func (self *CosNamingNamingContextNotFound) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNamingNamingContextNotFound) Error() string{
	return 	__fmt__.Sprintf("Error of type CosNamingNamingContextNotFound(%v)", self.String())
}
func (self *CosNamingNamingContextNotFound) GoString() string {
	return self.String()
}

func (self *CosNamingNamingContextNotFound) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlEnum)
	self.Why, err = __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlSequence)
	self.RestOfName, err = CosNamingNameHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextNotFound) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextNotFound) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlEnum)
	err = __goidl__.IdlUInt32Helper.Write(stream, self.Why)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlSequence)
	err = CosNamingNameHelper.Write(stream, self.RestOfName)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextNotFound_Helper struct {
}

// Exception declaration: "CosNaming::NamingContext::CannotProceed", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosNamingNamingContextCannotProceed struct {
	__goidl__.IdlObject
	Cxt CosNamingNamingContext `json:"Cxt"`
	RestOfName CosNamingName `json:"RestOfName"`
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextCannotProceedId_Const = "IDL:omg.org/CosNaming/NamingContext/CannotProceed:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosNamingNamingContextCannotProceed() *CosNamingNamingContextCannotProceed {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextCannotProceed{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextCannotProceedId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "cxt", Type: "CosNaming::NamingContext" Scope: "IdlInterface"
		Cxt: CosNamingNamingContext(nil),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "rest_of_name", Type: "CosNaming::Name" Scope: "IdlTypedef"
		RestOfName: CosNamingName(nil),
	}
}

//noinspection GoUnusedExportedFunction
func NewCosNamingNamingContextCannotProceed(
	//"StructDclAllParamsConstructorParamService"
	Cxt CosNamingNamingContext,
	//"StructDclAllParamsConstructorParamService"
	RestOfName CosNamingName) *CosNamingNamingContextCannotProceed {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextCannotProceed{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextCannotProceedId_Const,
		},
		Cxt: Cxt,
		RestOfName: RestOfName,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosNamingNamingContextCannotProceed(randomGenerator __goidl__.IRandomDataGenerator) *CosNamingNamingContextCannotProceed {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextCannotProceed{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextCannotProceedId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "cxt", Type: "CosNaming::NamingContext" Scope: "IdlInterface"
		Cxt: CosNamingNamingContext(nil),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "rest_of_name", Type: "CosNaming::Name" Scope: "IdlTypedef"
		RestOfName: CosNamingName(nil),
	}
}

func (self *CosNamingNamingContextCannotProceed) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNamingNamingContextCannotProceed) Error() string{
	return 	__fmt__.Sprintf("Error of type CosNamingNamingContextCannotProceed(%v)", self.String())
}
func (self *CosNamingNamingContextCannotProceed) GoString() string {
	return self.String()
}

func (self *CosNamingNamingContextCannotProceed) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlInterface)
	self.Cxt, err = CosNamingNamingContextHelper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlSequence)
	self.RestOfName, err = CosNamingNameHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextCannotProceed) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextCannotProceed) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlInterface)
	err = CosNamingNamingContextHelper.Write(stream, self.Cxt)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlSequence)
	err = CosNamingNameHelper.Write(stream, self.RestOfName)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextCannotProceed_Helper struct {
}

// Exception declaration: "CosNaming::NamingContext::InvalidName", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosNamingNamingContextInvalidName struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextInvalidNameId_Const = "IDL:omg.org/CosNaming/NamingContext/InvalidName:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosNamingNamingContextInvalidName() *CosNamingNamingContextInvalidName {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextInvalidName{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextInvalidNameId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCosNamingNamingContextInvalidName() *CosNamingNamingContextInvalidName {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextInvalidName{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextInvalidNameId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosNamingNamingContextInvalidName() *CosNamingNamingContextInvalidName {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextInvalidName{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextInvalidNameId_Const,
		},
	}
}

func (self *CosNamingNamingContextInvalidName) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNamingNamingContextInvalidName) Error() string{
	return 	__fmt__.Sprintf("Error of type CosNamingNamingContextInvalidName(%v)", self.String())
}
func (self *CosNamingNamingContextInvalidName) GoString() string {
	return self.String()
}

func (self *CosNamingNamingContextInvalidName) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextInvalidName) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextInvalidName) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextInvalidName_Helper struct {
}

// Exception declaration: "CosNaming::NamingContext::AlreadyBound", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosNamingNamingContextAlreadyBound struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextAlreadyBoundId_Const = "IDL:omg.org/CosNaming/NamingContext/AlreadyBound:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosNamingNamingContextAlreadyBound() *CosNamingNamingContextAlreadyBound {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextAlreadyBound{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextAlreadyBoundId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCosNamingNamingContextAlreadyBound() *CosNamingNamingContextAlreadyBound {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextAlreadyBound{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextAlreadyBoundId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosNamingNamingContextAlreadyBound() *CosNamingNamingContextAlreadyBound {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextAlreadyBound{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextAlreadyBoundId_Const,
		},
	}
}

func (self *CosNamingNamingContextAlreadyBound) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNamingNamingContextAlreadyBound) Error() string{
	return 	__fmt__.Sprintf("Error of type CosNamingNamingContextAlreadyBound(%v)", self.String())
}
func (self *CosNamingNamingContextAlreadyBound) GoString() string {
	return self.String()
}

func (self *CosNamingNamingContextAlreadyBound) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextAlreadyBound) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextAlreadyBound) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextAlreadyBound_Helper struct {
}

// Exception declaration: "CosNaming::NamingContext::NotEmpty", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosNamingNamingContextNotEmpty struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextNotEmptyId_Const = "IDL:omg.org/CosNaming/NamingContext/NotEmpty:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosNamingNamingContextNotEmpty() *CosNamingNamingContextNotEmpty {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextNotEmpty{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextNotEmptyId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCosNamingNamingContextNotEmpty() *CosNamingNamingContextNotEmpty {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextNotEmpty{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextNotEmptyId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosNamingNamingContextNotEmpty() *CosNamingNamingContextNotEmpty {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextNotEmpty{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextNotEmptyId_Const,
		},
	}
}

func (self *CosNamingNamingContextNotEmpty) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNamingNamingContextNotEmpty) Error() string{
	return 	__fmt__.Sprintf("Error of type CosNamingNamingContextNotEmpty(%v)", self.String())
}
func (self *CosNamingNamingContextNotEmpty) GoString() string {
	return self.String()
}

func (self *CosNamingNamingContextNotEmpty) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextNotEmpty) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextNotEmpty) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextNotEmpty_Helper struct {
}

// Interface declaration: "CosNaming::NamingContext", generatedBy by: "WriteInterface"
type CosNamingNamingContext interface {
	// Interface operations
	//Exceptions for : Bind
	//	CosNamingNamingContextNotFound
	//	CosNamingNamingContextCannotProceed
	//	CosNamingNamingContextInvalidName
	//	CosNamingNamingContextAlreadyBound
	// Original name: "bind"
	Bind(N CosNamingName, Obj *__goidl__.IdlObject) (error error)
	//Exceptions for : Rebind
	//	CosNamingNamingContextNotFound
	//	CosNamingNamingContextCannotProceed
	//	CosNamingNamingContextInvalidName
	// Original name: "rebind"
	Rebind(N CosNamingName, Obj *__goidl__.IdlObject) (error error)
	//Exceptions for : BindContext
	//	CosNamingNamingContextNotFound
	//	CosNamingNamingContextCannotProceed
	//	CosNamingNamingContextInvalidName
	//	CosNamingNamingContextAlreadyBound
	// Original name: "bind_context"
	BindContext(N CosNamingName, Nc CosNamingNamingContext) (error error)
	//Exceptions for : RebindContext
	//	CosNamingNamingContextNotFound
	//	CosNamingNamingContextCannotProceed
	//	CosNamingNamingContextInvalidName
	// Original name: "rebind_context"
	RebindContext(N CosNamingName, Nc CosNamingNamingContext) (error error)
	//Exceptions for : Resolve
	//	CosNamingNamingContextNotFound
	//	CosNamingNamingContextCannotProceed
	//	CosNamingNamingContextInvalidName
	// Original name: "resolve"
	Resolve(N CosNamingName) (result *__goidl__.IdlObject, err error)
	//Exceptions for : Unbind
	//	CosNamingNamingContextNotFound
	//	CosNamingNamingContextCannotProceed
	//	CosNamingNamingContextInvalidName
	// Original name: "unbind"
	Unbind(N CosNamingName) (error error)
	// Original name: "new_context"
	NewContext() (result CosNamingNamingContext, err error)
	//Exceptions for : BindNewContext
	//	CosNamingNamingContextNotFound
	//	CosNamingNamingContextCannotProceed
	//	CosNamingNamingContextInvalidName
	//	CosNamingNamingContextAlreadyBound
	// Original name: "bind_new_context"
	BindNewContext(N CosNamingName) (result CosNamingNamingContext, err error)
	//Exceptions for : Destroy
	//	CosNamingNamingContextNotEmpty
	// Original name: "destroy"
	Destroy() (error error)
	// Original name: "list"
	List(HowMany uint32) (Bl CosNamingBindingList, Bi CosNamingBindingIterator, error error)
}

//noinspection GoSnakeCaseUsage
type CosNamingNamingContext_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextId_Const = "IDL:omg.org/CosNaming/NamingContext:1.0"

func (self CosNamingNamingContext_Helper) Id() string {
	return CosNamingNamingContextId_Const
}

func (self CosNamingNamingContext_Helper) Read(stream __goidl__.IReadAny) (CosNamingNamingContext, error) {
	return nil, nil
}

func (self CosNamingNamingContext_Helper) Write(stream __goidl__.IWriteAny, v CosNamingNamingContext) error {
	return nil
}

// Interface declaration: "CosNaming::BindingIterator", generatedBy by: "WriteInterface"
type CosNamingBindingIterator interface {
	// Interface operations
	// Original name: "next_one"
	NextOne() (B *CosNamingBinding, result bool, err error)
	// Original name: "next_n"
	NextN(HowMany uint32) (Bl CosNamingBindingList, result bool, err error)
	// Original name: "destroy"
	Destroy() (error error)
}

//noinspection GoSnakeCaseUsage
type CosNamingBindingIterator_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingBindingIteratorId_Const = "IDL:omg.org/CosNaming/BindingIterator:1.0"

func (self CosNamingBindingIterator_Helper) Id() string {
	return CosNamingBindingIteratorId_Const
}

func (self CosNamingBindingIterator_Helper) Read(stream __goidl__.IReadAny) (CosNamingBindingIterator, error) {
	return nil, nil
}

func (self CosNamingBindingIterator_Helper) Write(stream __goidl__.IWriteAny, v CosNamingBindingIterator) error {
	return nil
}

// TypeDef declaration: "CosNaming::NamingContextExt::StringName", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CosNaming::NamingContextExt::StringName" from: "string"
type CosNamingNamingContextExtStringName string

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextExtStringName_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextExtStringNameId_Const = "IDL:omg.org/CosNaming/NamingContextExt/StringName:1.0"

func (self CosNamingNamingContextExtStringName_Helper) Id() string {
	return CosNamingNamingContextExtStringNameId_Const
}

func (self CosNamingNamingContextExtStringName_Helper) Read(stream __goidl__.IReadAny) (string, error) {
	result, err := __goidl__.IdlStringHelper.Read(stream)
	return result, err
}

func (self CosNamingNamingContextExtStringName_Helper) Write(stream __goidl__.IWriteAny, v string) error {
	return __goidl__.IdlStringHelper.Write(stream, v)
}

// TypeDef declaration: "CosNaming::NamingContextExt::Address", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CosNaming::NamingContextExt::Address" from: "string"
type CosNamingNamingContextExtAddress string

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextExtAddress_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextExtAddressId_Const = "IDL:omg.org/CosNaming/NamingContextExt/Address:1.0"

func (self CosNamingNamingContextExtAddress_Helper) Id() string {
	return CosNamingNamingContextExtAddressId_Const
}

func (self CosNamingNamingContextExtAddress_Helper) Read(stream __goidl__.IReadAny) (string, error) {
	result, err := __goidl__.IdlStringHelper.Read(stream)
	return result, err
}

func (self CosNamingNamingContextExtAddress_Helper) Write(stream __goidl__.IWriteAny, v string) error {
	return __goidl__.IdlStringHelper.Write(stream, v)
}

// TypeDef declaration: "CosNaming::NamingContextExt::URLString", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CosNaming::NamingContextExt::URLString" from: "string"
type CosNamingNamingContextExtURLString string

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextExtURLString_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextExtURLStringId_Const = "IDL:omg.org/CosNaming/NamingContextExt/URLString:1.0"

func (self CosNamingNamingContextExtURLString_Helper) Id() string {
	return CosNamingNamingContextExtURLStringId_Const
}

func (self CosNamingNamingContextExtURLString_Helper) Read(stream __goidl__.IReadAny) (string, error) {
	result, err := __goidl__.IdlStringHelper.Read(stream)
	return result, err
}

func (self CosNamingNamingContextExtURLString_Helper) Write(stream __goidl__.IWriteAny, v string) error {
	return __goidl__.IdlStringHelper.Write(stream, v)
}

// Exception declaration: "CosNaming::NamingContextExt::InvalidAddress", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CosNamingNamingContextExtInvalidAddress struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextExtInvalidAddressId_Const = "IDL:omg.org/CosNaming/NamingContextExt/InvalidAddress:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCosNamingNamingContextExtInvalidAddress() *CosNamingNamingContextExtInvalidAddress {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextExtInvalidAddress{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextExtInvalidAddressId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCosNamingNamingContextExtInvalidAddress() *CosNamingNamingContextExtInvalidAddress {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextExtInvalidAddress{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextExtInvalidAddressId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCosNamingNamingContextExtInvalidAddress() *CosNamingNamingContextExtInvalidAddress {
	//noinspection GoRedundantConversion
	return &CosNamingNamingContextExtInvalidAddress{
		IdlObject: __goidl__.IdlObject{
			Id: CosNamingNamingContextExtInvalidAddressId_Const,
		},
	}
}

func (self *CosNamingNamingContextExtInvalidAddress) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CosNamingNamingContextExtInvalidAddress) Error() string{
	return 	__fmt__.Sprintf("Error of type CosNamingNamingContextExtInvalidAddress(%v)", self.String())
}
func (self *CosNamingNamingContextExtInvalidAddress) GoString() string {
	return self.String()
}

func (self *CosNamingNamingContextExtInvalidAddress) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextExtInvalidAddress) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CosNamingNamingContextExtInvalidAddress) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextExtInvalidAddress_Helper struct {
}

// Interface declaration: "CosNaming::NamingContextExt", generatedBy by: "WriteInterface"
type CosNamingNamingContextExt interface {
	//No duplicate operations found in the base interfaces.
	CosNamingNamingContext
	// Interface operations
	//Exceptions for : ToString
	//	CosNamingNamingContextInvalidName
	// Original name: "to_string"
	ToString(N CosNamingName) (result string, err error)
	//Exceptions for : ToName
	//	CosNamingNamingContextInvalidName
	// Original name: "to_name"
	ToName(Sn string) (result CosNamingName, err error)
	//Exceptions for : ToUrl
	//	CosNamingNamingContextExtInvalidAddress
	//	CosNamingNamingContextInvalidName
	// Original name: "to_url"
	ToUrl(Addr string, Sn string) (result string, err error)
	//Exceptions for : ResolveStr
	//	CosNamingNamingContextNotFound
	//	CosNamingNamingContextCannotProceed
	//	CosNamingNamingContextInvalidName
	// Original name: "resolve_str"
	ResolveStr(N string) (result *__goidl__.IdlObject, err error)
}

//noinspection GoSnakeCaseUsage
type CosNamingNamingContextExt_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CosNamingNamingContextExtId_Const = "IDL:omg.org/CosNaming/NamingContextExt:1.0"

func (self CosNamingNamingContextExt_Helper) Id() string {
	return CosNamingNamingContextExtId_Const
}

func (self CosNamingNamingContextExt_Helper) Read(stream __goidl__.IReadAny) (CosNamingNamingContextExt, error) {
	return nil, nil
}

func (self CosNamingNamingContextExt_Helper) Write(stream __goidl__.IWriteAny, v CosNamingNamingContextExt) error {
	return nil
}


//noinspection GoUnusedGlobalVariable
var CosNamingIstringHelper = CosNamingIstring_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNameComponentHelper = CosNamingNameComponent_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNameHelper = CosNamingName_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingBindingTypeHelper = CosNamingBindingType_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingBindingHelper = CosNamingBinding_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingBindingListHelper = CosNamingBindingList_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextNotFoundReasonHelper = CosNamingNamingContextNotFoundReason_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextNotFoundHelper = CosNamingNamingContextNotFound_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextCannotProceedHelper = CosNamingNamingContextCannotProceed_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextInvalidNameHelper = CosNamingNamingContextInvalidName_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextAlreadyBoundHelper = CosNamingNamingContextAlreadyBound_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextNotEmptyHelper = CosNamingNamingContextNotEmpty_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextHelper = CosNamingNamingContext_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingBindingIteratorHelper = CosNamingBindingIterator_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextExtStringNameHelper = CosNamingNamingContextExtStringName_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextExtAddressHelper = CosNamingNamingContextExtAddress_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextExtURLStringHelper = CosNamingNamingContextExtURLString_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextExtInvalidAddressHelper = CosNamingNamingContextExtInvalidAddress_Helper{}

//noinspection GoUnusedGlobalVariable
var CosNamingNamingContextExtHelper = CosNamingNamingContextExt_Helper{}

func init() {
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNamingNameComponentId_Const,
			__yaccidl__.IdlStruct,
			"CosNaming.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosNamingNameComponent()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCosNamingNameComponent(generator)
			},
			__reflect__.TypeOf((*CosNamingNameComponent)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNamingBindingId_Const,
			__yaccidl__.IdlStruct,
			"CosNaming.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosNamingBinding()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCosNamingBinding(generator)
			},
			__reflect__.TypeOf((*CosNamingBinding)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNamingNamingContextNotFoundId_Const,
			__yaccidl__.IdlStruct,
			"CosNaming.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextNotFound()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCosNamingNamingContextNotFound(generator)
			},
			__reflect__.TypeOf((*CosNamingNamingContextNotFound)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNamingNamingContextCannotProceedId_Const,
			__yaccidl__.IdlStruct,
			"CosNaming.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextCannotProceed()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCosNamingNamingContextCannotProceed(generator)
			},
			__reflect__.TypeOf((*CosNamingNamingContextCannotProceed)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNamingNamingContextInvalidNameId_Const,
			__yaccidl__.IdlStruct,
			"CosNaming.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextInvalidName()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextInvalidName()
			},
			__reflect__.TypeOf((*CosNamingNamingContextInvalidName)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNamingNamingContextAlreadyBoundId_Const,
			__yaccidl__.IdlStruct,
			"CosNaming.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextAlreadyBound()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextAlreadyBound()
			},
			__reflect__.TypeOf((*CosNamingNamingContextAlreadyBound)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNamingNamingContextNotEmptyId_Const,
			__yaccidl__.IdlStruct,
			"CosNaming.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextNotEmpty()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextNotEmpty()
			},
			__reflect__.TypeOf((*CosNamingNamingContextNotEmpty)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CosNamingNamingContextExtInvalidAddressId_Const,
			__yaccidl__.IdlStruct,
			"CosNaming.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextExtInvalidAddress()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCosNamingNamingContextExtInvalidAddress()
			},
			__reflect__.TypeOf((*CosNamingNamingContextExtInvalidAddress)(nil))))
}
