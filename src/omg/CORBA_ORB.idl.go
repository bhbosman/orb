// Code generated by me. DO NOT EDIT.

package omg

import __fmt__ "fmt"
import __goidl__ "github.com/bhbosman/goidl"
import __json__ "encoding/json"
import __reflect__ "reflect"
import __yaccidl__ "github.com/bhbosman/yaccidl"

// TypeDef declaration: "CORBA::Flags", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::Flags" from: "uint32"
type CorbaFlags uint32

//noinspection GoSnakeCaseUsage
type CorbaFlags_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaFlagsId_Const = "IDL:omg.org/CORBA/Flags:1.0"

func (self CorbaFlags_Helper) Id() string {
	return CorbaFlagsId_Const
}

func (self CorbaFlags_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CorbaFlags_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// TypeDef declaration: "CORBA::RequestSeq", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::RequestSeq
type CorbaRequestSeq []CorbaRequest

//noinspection GoSnakeCaseUsage
type CorbaRequestSeq_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaRequestSeqId_Const = "IDL:omg.org/CORBA/RequestSeq:1.0"

func (self CorbaRequestSeq_Helper) Id() string {
	return CorbaRequestSeqId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaRequestSeq_Helper) Read(stream __goidl__.IReadAny) (CorbaRequestSeq, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaRequestSeq, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = CorbaRequestHelper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaRequestSeq_Helper) Write(stream __goidl__.IWriteAny, v CorbaRequestSeq) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = CorbaRequestHelper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// Native declaration: "CORBA::AbstractBase", generatedBy by: "WriteNativeDcl"
type CorbaAbstractBase NativeCorbaAbstractBase

// TypeDef declaration: "CORBA::ServiceType", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::ServiceType" from: "uint16"
type CorbaServiceType uint16

//noinspection GoSnakeCaseUsage
type CorbaServiceType_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaServiceTypeId_Const = "IDL:omg.org/CORBA/ServiceType:1.0"

func (self CorbaServiceType_Helper) Id() string {
	return CorbaServiceTypeId_Const
}

func (self CorbaServiceType_Helper) Read(stream __goidl__.IReadAny) (uint16, error) {
	result, err := __goidl__.IdlUInt16Helper.Read(stream)
	return result, err
}

func (self CorbaServiceType_Helper) Write(stream __goidl__.IWriteAny, v uint16) error {
	return __goidl__.IdlUInt16Helper.Write(stream, v)
}

// TypeDef declaration: "CORBA::ServiceOption", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::ServiceOption" from: "uint32"
type CorbaServiceOption uint32

//noinspection GoSnakeCaseUsage
type CorbaServiceOption_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaServiceOptionId_Const = "IDL:omg.org/CORBA/ServiceOption:1.0"

func (self CorbaServiceOption_Helper) Id() string {
	return CorbaServiceOptionId_Const
}

func (self CorbaServiceOption_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CorbaServiceOption_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// TypeDef declaration: "CORBA::ServiceDetailType", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::ServiceDetailType" from: "uint32"
type CorbaServiceDetailType uint32

//noinspection GoSnakeCaseUsage
type CorbaServiceDetailType_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaServiceDetailTypeId_Const = "IDL:omg.org/CORBA/ServiceDetailType:1.0"

func (self CorbaServiceDetailType_Helper) Id() string {
	return CorbaServiceDetailTypeId_Const
}

func (self CorbaServiceDetailType_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CorbaServiceDetailType_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// TypeDef declaration: "CORBA::ServiceDetailData", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::ServiceDetailData
type CorbaServiceDetailData []byte

//noinspection GoSnakeCaseUsage
type CorbaServiceDetailData_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaServiceDetailDataId_Const = "IDL:omg.org/CORBA/ServiceDetailData:1.0"

func (self CorbaServiceDetailData_Helper) Id() string {
	return CorbaServiceDetailDataId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaServiceDetailData_Helper) Read(stream __goidl__.IReadAny) (CorbaServiceDetailData, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaServiceDetailData, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = __goidl__.IdlOctetHelper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaServiceDetailData_Helper) Write(stream __goidl__.IWriteAny, v CorbaServiceDetailData) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = __goidl__.IdlOctetHelper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// TypeDef declaration: "CORBA::ServiceOptionSeq", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::ServiceOptionSeq
type CorbaServiceOptionSeq []uint32

//noinspection GoSnakeCaseUsage
type CorbaServiceOptionSeq_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaServiceOptionSeqId_Const = "IDL:omg.org/CORBA/ServiceOptionSeq:1.0"

func (self CorbaServiceOptionSeq_Helper) Id() string {
	return CorbaServiceOptionSeqId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaServiceOptionSeq_Helper) Read(stream __goidl__.IReadAny) (CorbaServiceOptionSeq, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaServiceOptionSeq, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = __goidl__.IdlUInt32Helper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaServiceOptionSeq_Helper) Write(stream __goidl__.IWriteAny, v CorbaServiceOptionSeq) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = __goidl__.IdlUInt32Helper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// Constant declaration: "CORBA::Security", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaSecurity uint16 = 1

// Struct declaration: "CORBA::ServiceDetail", generatedBy by: "WriteStructDcl"
// Exception Decl: false
type CorbaServiceDetail struct {
	__goidl__.IdlObject
	ServiceDetailType uint32 `json:"ServiceDetailType"`
	ServiceDetail CorbaServiceDetailData `json:"ServiceDetail"`
}

//noinspection GoSnakeCaseUsage
const CorbaServiceDetailId_Const = "IDL:omg.org/CORBA/ServiceDetail:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCorbaServiceDetail() *CorbaServiceDetail {
	//noinspection GoRedundantConversion
	return &CorbaServiceDetail{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaServiceDetailId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "service_detail_type", Type: "CORBA::ServiceDetailType" Scope: "IdlTypedef"
		ServiceDetailType: 0,
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "service_detail", Type: "CORBA::ServiceDetailData" Scope: "IdlTypedef"
		ServiceDetail: CorbaServiceDetailData(CorbaServiceDetailData(nil)),
	}
}

//noinspection GoUnusedExportedFunction
func NewCorbaServiceDetail(
	//"StructDclAllParamsConstructorParamService"
	ServiceDetailType uint32,
	//"StructDclAllParamsConstructorParamService"
	ServiceDetail CorbaServiceDetailData) *CorbaServiceDetail {
	//noinspection GoRedundantConversion
	return &CorbaServiceDetail{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaServiceDetailId_Const,
		},
		ServiceDetailType: ServiceDetailType,
		ServiceDetail: ServiceDetail,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCorbaServiceDetail(randomGenerator __goidl__.IRandomDataGenerator) *CorbaServiceDetail {
	//noinspection GoRedundantConversion
	return &CorbaServiceDetail{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaServiceDetailId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "service_detail_type", Type: "CORBA::ServiceDetailType" Scope: "IdlTypedef"
		ServiceDetailType: randomGenerator.UnsignedLongTypeValue(__reflect__.TypeOf((*CorbaServiceDetail)(nil)), "ServiceDetailType"),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "service_detail", Type: "CORBA::ServiceDetailData" Scope: "IdlTypedef"
		ServiceDetail: CorbaServiceDetailData(CorbaServiceDetailData(nil)),
	}
}

func (self *CorbaServiceDetail) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CorbaServiceDetail) GoString() string {
	return self.String()
}

func (self *CorbaServiceDetail) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(UnsignedLongType)
	self.ServiceDetailType, err = __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlSequence)
	self.ServiceDetail, err = CorbaServiceDetailDataHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaServiceDetail) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaServiceDetail) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(UnsignedLongType)
	err = __goidl__.IdlUInt32Helper.Write(stream, self.ServiceDetailType)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlSequence)
	err = CorbaServiceDetailDataHelper.Write(stream, self.ServiceDetail)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CorbaServiceDetail_Helper struct {
}

// TypeDef declaration: "CORBA::ServiceDetailSeq", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::ServiceDetailSeq
type CorbaServiceDetailSeq []*CorbaServiceDetail

//noinspection GoSnakeCaseUsage
type CorbaServiceDetailSeq_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaServiceDetailSeqId_Const = "IDL:omg.org/CORBA/ServiceDetailSeq:1.0"

func (self CorbaServiceDetailSeq_Helper) Id() string {
	return CorbaServiceDetailSeqId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaServiceDetailSeq_Helper) Read(stream __goidl__.IReadAny) (CorbaServiceDetailSeq, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaServiceDetailSeq, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i] = NewDefaultCorbaServiceDetail()
			err = result[i].Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaServiceDetailSeq_Helper) Write(stream __goidl__.IWriteAny, v CorbaServiceDetailSeq) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = item.Write(stream)
		if err != nil {
			return err
		}
	}
	return err
}

// Struct declaration: "CORBA::ServiceInformation", generatedBy by: "WriteStructDcl"
// Exception Decl: false
type CorbaServiceInformation struct {
	__goidl__.IdlObject
	ServiceOptions CorbaServiceOptionSeq `json:"ServiceOptions"`
	ServiceDetails CorbaServiceDetailSeq `json:"ServiceDetails"`
}

//noinspection GoSnakeCaseUsage
const CorbaServiceInformationId_Const = "IDL:omg.org/CORBA/ServiceInformation:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCorbaServiceInformation() *CorbaServiceInformation {
	//noinspection GoRedundantConversion
	return &CorbaServiceInformation{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaServiceInformationId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "service_options", Type: "CORBA::ServiceOptionSeq" Scope: "IdlTypedef"
		ServiceOptions: CorbaServiceOptionSeq(nil),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "service_details", Type: "CORBA::ServiceDetailSeq" Scope: "IdlTypedef"
		ServiceDetails: CorbaServiceDetailSeq(nil),
	}
}

//noinspection GoUnusedExportedFunction
func NewCorbaServiceInformation(
	//"StructDclAllParamsConstructorParamService"
	ServiceOptions CorbaServiceOptionSeq,
	//"StructDclAllParamsConstructorParamService"
	ServiceDetails CorbaServiceDetailSeq) *CorbaServiceInformation {
	//noinspection GoRedundantConversion
	return &CorbaServiceInformation{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaServiceInformationId_Const,
		},
		ServiceOptions: ServiceOptions,
		ServiceDetails: ServiceDetails,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCorbaServiceInformation(randomGenerator __goidl__.IRandomDataGenerator) *CorbaServiceInformation {
	//noinspection GoRedundantConversion
	return &CorbaServiceInformation{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaServiceInformationId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "service_options", Type: "CORBA::ServiceOptionSeq" Scope: "IdlTypedef"
		ServiceOptions: CorbaServiceOptionSeq(nil),
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "service_details", Type: "CORBA::ServiceDetailSeq" Scope: "IdlTypedef"
		ServiceDetails: CorbaServiceDetailSeq(nil),
	}
}

func (self *CorbaServiceInformation) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CorbaServiceInformation) GoString() string {
	return self.String()
}

func (self *CorbaServiceInformation) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlSequence)
	self.ServiceOptions, err = CorbaServiceOptionSeqHelper.Read(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlSequence)
	self.ServiceDetails, err = CorbaServiceDetailSeqHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaServiceInformation) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaServiceInformation) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlSequence)
	err = CorbaServiceOptionSeqHelper.Write(stream, self.ServiceOptions)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlSequence)
	err = CorbaServiceDetailSeqHelper.Write(stream, self.ServiceDetails)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CorbaServiceInformation_Helper struct {
}

// Native declaration: "CORBA::ValueFactory", generatedBy by: "WriteNativeDcl"
type CorbaValueFactory NativeCorbaValueFactory

// TypeDef declaration: "CORBA::ORBid", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::ORBid" from: "string"
type CorbaORBid string

//noinspection GoSnakeCaseUsage
type CorbaORBid_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaORBidId_Const = "IDL:omg.org/CORBA/ORBid:1.0"

func (self CorbaORBid_Helper) Id() string {
	return CorbaORBidId_Const
}

func (self CorbaORBid_Helper) Read(stream __goidl__.IReadAny) (string, error) {
	result, err := __goidl__.IdlStringHelper.Read(stream)
	return result, err
}

func (self CorbaORBid_Helper) Write(stream __goidl__.IWriteAny, v string) error {
	return __goidl__.IdlStringHelper.Write(stream, v)
}

// Exception declaration: "CORBA::WrongTransaction", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CorbaWrongTransaction struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CorbaWrongTransactionId_Const = "IDL:omg.org/CORBA/WrongTransaction:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCorbaWrongTransaction() *CorbaWrongTransaction {
	//noinspection GoRedundantConversion
	return &CorbaWrongTransaction{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaWrongTransactionId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCorbaWrongTransaction() *CorbaWrongTransaction {
	//noinspection GoRedundantConversion
	return &CorbaWrongTransaction{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaWrongTransactionId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCorbaWrongTransaction() *CorbaWrongTransaction {
	//noinspection GoRedundantConversion
	return &CorbaWrongTransaction{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaWrongTransactionId_Const,
		},
	}
}

func (self *CorbaWrongTransaction) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CorbaWrongTransaction) Error() string{
	return 	__fmt__.Sprintf("Error of type CorbaWrongTransaction(%v)", self.String())
}
func (self *CorbaWrongTransaction) GoString() string {
	return self.String()
}

func (self *CorbaWrongTransaction) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaWrongTransaction) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaWrongTransaction) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CorbaWrongTransaction_Helper struct {
}

// TypeDef declaration: "CORBA::ORB::ObjectId", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::ORB::ObjectId" from: "string"
type CorbaOrbObjectId string

//noinspection GoSnakeCaseUsage
type CorbaOrbObjectId_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaOrbObjectIdId_Const = "IDL:omg.org/CORBA/ORB/ObjectId:1.0"

func (self CorbaOrbObjectId_Helper) Id() string {
	return CorbaOrbObjectIdId_Const
}

func (self CorbaOrbObjectId_Helper) Read(stream __goidl__.IReadAny) (string, error) {
	result, err := __goidl__.IdlStringHelper.Read(stream)
	return result, err
}

func (self CorbaOrbObjectId_Helper) Write(stream __goidl__.IWriteAny, v string) error {
	return __goidl__.IdlStringHelper.Write(stream, v)
}

// TypeDef declaration: "CORBA::ORB::ObjectIdList", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::ORB::ObjectIdList
type CorbaOrbObjectIdList []string

//noinspection GoSnakeCaseUsage
type CorbaOrbObjectIdList_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaOrbObjectIdListId_Const = "IDL:omg.org/CORBA/ORB/ObjectIdList:1.0"

func (self CorbaOrbObjectIdList_Helper) Id() string {
	return CorbaOrbObjectIdListId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaOrbObjectIdList_Helper) Read(stream __goidl__.IReadAny) (CorbaOrbObjectIdList, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaOrbObjectIdList, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = __goidl__.IdlStringHelper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaOrbObjectIdList_Helper) Write(stream __goidl__.IWriteAny, v CorbaOrbObjectIdList) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = __goidl__.IdlStringHelper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// Exception declaration: "CORBA::ORB::InvalidName", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CorbaOrbInvalidName struct {
	__goidl__.IdlObject
}

//noinspection GoSnakeCaseUsage
const CorbaOrbInvalidNameId_Const = "IDL:omg.org/CORBA/ORB/InvalidName:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCorbaOrbInvalidName() *CorbaOrbInvalidName {
	//noinspection GoRedundantConversion
	return &CorbaOrbInvalidName{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaOrbInvalidNameId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewCorbaOrbInvalidName() *CorbaOrbInvalidName {
	//noinspection GoRedundantConversion
	return &CorbaOrbInvalidName{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaOrbInvalidNameId_Const,
		},
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCorbaOrbInvalidName() *CorbaOrbInvalidName {
	//noinspection GoRedundantConversion
	return &CorbaOrbInvalidName{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaOrbInvalidNameId_Const,
		},
	}
}

func (self *CorbaOrbInvalidName) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CorbaOrbInvalidName) Error() string{
	return 	__fmt__.Sprintf("Error of type CorbaOrbInvalidName(%v)", self.String())
}
func (self *CorbaOrbInvalidName) GoString() string {
	return self.String()
}

func (self *CorbaOrbInvalidName) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaOrbInvalidName) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaOrbInvalidName) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CorbaOrbInvalidName_Helper struct {
}


//noinspection GoUnusedGlobalVariable
var CorbaFlagsHelper = CorbaFlags_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaRequestSeqHelper = CorbaRequestSeq_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaServiceTypeHelper = CorbaServiceType_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaServiceOptionHelper = CorbaServiceOption_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaServiceDetailTypeHelper = CorbaServiceDetailType_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaServiceDetailDataHelper = CorbaServiceDetailData_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaServiceOptionSeqHelper = CorbaServiceOptionSeq_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaServiceDetailHelper = CorbaServiceDetail_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaServiceDetailSeqHelper = CorbaServiceDetailSeq_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaServiceInformationHelper = CorbaServiceInformation_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaORBidHelper = CorbaORBid_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaWrongTransactionHelper = CorbaWrongTransaction_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaOrbObjectIdHelper = CorbaOrbObjectId_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaOrbObjectIdListHelper = CorbaOrbObjectIdList_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaOrbInvalidNameHelper = CorbaOrbInvalidName_Helper{}

func init() {
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CorbaServiceDetailId_Const,
			__yaccidl__.IdlStruct,
			"CORBA_ORB.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCorbaServiceDetail()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCorbaServiceDetail(generator)
			},
			__reflect__.TypeOf((*CorbaServiceDetail)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CorbaServiceInformationId_Const,
			__yaccidl__.IdlStruct,
			"CORBA_ORB.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCorbaServiceInformation()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCorbaServiceInformation(generator)
			},
			__reflect__.TypeOf((*CorbaServiceInformation)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CorbaWrongTransactionId_Const,
			__yaccidl__.IdlStruct,
			"CORBA_ORB.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCorbaWrongTransaction()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCorbaWrongTransaction()
			},
			__reflect__.TypeOf((*CorbaWrongTransaction)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CorbaOrbInvalidNameId_Const,
			__yaccidl__.IdlStruct,
			"CORBA_ORB.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCorbaOrbInvalidName()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewDefaultCorbaOrbInvalidName()
			},
			__reflect__.TypeOf((*CorbaOrbInvalidName)(nil))))
}
