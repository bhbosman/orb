// Code generated by me. DO NOT EDIT.

package omg

import __fmt__ "fmt"
import __goidl__ "github.com/bhbosman/goidl"
import __json__ "encoding/json"
import __reflect__ "reflect"
import __yaccidl__ "github.com/bhbosman/yaccidl"

// TypeDef declaration: "CORBA::PolicyType", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::PolicyType" from: "uint32"
type CorbaPolicyType uint32

//noinspection GoSnakeCaseUsage
type CorbaPolicyType_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyTypeId_Const = "IDL:omg.org/CORBA/PolicyType:1.0"

func (self CorbaPolicyType_Helper) Id() string {
	return CorbaPolicyTypeId_Const
}

func (self CorbaPolicyType_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CorbaPolicyType_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// TypeDef declaration: "CORBA::PolicyList", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::PolicyList
type CorbaPolicyList []CorbaPolicy

//noinspection GoSnakeCaseUsage
type CorbaPolicyList_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyListId_Const = "IDL:omg.org/CORBA/PolicyList:1.0"

func (self CorbaPolicyList_Helper) Id() string {
	return CorbaPolicyListId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaPolicyList_Helper) Read(stream __goidl__.IReadAny) (CorbaPolicyList, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaPolicyList, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = CorbaPolicyHelper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaPolicyList_Helper) Write(stream __goidl__.IWriteAny, v CorbaPolicyList) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = CorbaPolicyHelper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// TypeDef declaration: "CORBA::PolicyTypeSeq", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::PolicyTypeSeq
type CorbaPolicyTypeSeq []uint32

//noinspection GoSnakeCaseUsage
type CorbaPolicyTypeSeq_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyTypeSeqId_Const = "IDL:omg.org/CORBA/PolicyTypeSeq:1.0"

func (self CorbaPolicyTypeSeq_Helper) Id() string {
	return CorbaPolicyTypeSeqId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaPolicyTypeSeq_Helper) Read(stream __goidl__.IReadAny) (CorbaPolicyTypeSeq, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaPolicyTypeSeq, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = __goidl__.IdlUInt32Helper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaPolicyTypeSeq_Helper) Write(stream __goidl__.IWriteAny, v CorbaPolicyTypeSeq) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = __goidl__.IdlUInt32Helper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// TypeDef declaration: "CORBA::PolicyErrorCode", generatedBy by: "WriteTypeDefOfPrimitiveDcl"
//Typedef Primitive declaration: "CORBA::PolicyErrorCode" from: "int16"
type CorbaPolicyErrorCode int16

//noinspection GoSnakeCaseUsage
type CorbaPolicyErrorCode_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyErrorCodeId_Const = "IDL:omg.org/CORBA/PolicyErrorCode:1.0"

func (self CorbaPolicyErrorCode_Helper) Id() string {
	return CorbaPolicyErrorCodeId_Const
}

func (self CorbaPolicyErrorCode_Helper) Read(stream __goidl__.IReadAny) (int16, error) {
	result, err := __goidl__.IdlInt16Helper.Read(stream)
	return result, err
}

func (self CorbaPolicyErrorCode_Helper) Write(stream __goidl__.IWriteAny, v int16) error {
	return __goidl__.IdlInt16Helper.Write(stream, v)
}

// Exception declaration: "CORBA::PolicyError", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CorbaPolicyError struct {
	__goidl__.IdlObject
	Reason int16 `json:"Reason"`
}

//noinspection GoSnakeCaseUsage
const CorbaPolicyErrorId_Const = "IDL:omg.org/CORBA/PolicyError:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCorbaPolicyError() *CorbaPolicyError {
	//noinspection GoRedundantConversion
	return &CorbaPolicyError{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaPolicyErrorId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "reason", Type: "CORBA::PolicyErrorCode" Scope: "IdlTypedef"
		Reason: 0,
	}
}

//noinspection GoUnusedExportedFunction
func NewCorbaPolicyError(
	//"StructDclAllParamsConstructorParamService"
	Reason int16) *CorbaPolicyError {
	//noinspection GoRedundantConversion
	return &CorbaPolicyError{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaPolicyErrorId_Const,
		},
		Reason: Reason,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCorbaPolicyError(randomGenerator __goidl__.IRandomDataGenerator) *CorbaPolicyError {
	//noinspection GoRedundantConversion
	return &CorbaPolicyError{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaPolicyErrorId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "reason", Type: "CORBA::PolicyErrorCode" Scope: "IdlTypedef"
		Reason: randomGenerator.ShortTypeValue(__reflect__.TypeOf((*CorbaPolicyError)(nil)), "Reason"),
	}
}

func (self *CorbaPolicyError) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CorbaPolicyError) Error() string{
	return 	__fmt__.Sprintf("Error of type CorbaPolicyError(%v)", self.String())
}
func (self *CorbaPolicyError) GoString() string {
	return self.String()
}

func (self *CorbaPolicyError) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(ShortType)
	self.Reason, err = __goidl__.IdlInt16Helper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaPolicyError) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaPolicyError) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(ShortType)
	err = __goidl__.IdlInt16Helper.Write(stream, self.Reason)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CorbaPolicyError_Helper struct {
}

// Constant declaration: "CORBA::BAD_POLICY", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaBadPolicy int16 = 0

// Constant declaration: "CORBA::UNSUPPORTED_POLICY", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaUnsupportedPolicy int16 = 1

// Constant declaration: "CORBA::BAD_POLICY_TYPE", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaBadPolicyType int16 = 2

// Constant declaration: "CORBA::BAD_POLICY_VALUE", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaBadPolicyValue int16 = 3

// Constant declaration: "CORBA::UNSUPPORTED_POLICY_VALUE", generatedBy by: "WriteConstantValue"
//noinspection GoUnusedConst
const CorbaUnsupportedPolicyValue int16 = 4

// Enum declaration: "CORBA::SetOverrideType", generatedBy by: "WriteEnumDcl"
type CorbaSetOverrideType uint32

//noinspection GoUnusedConst
const (
	CorbaSetOverrideTypeSetOverride CorbaSetOverrideType = 0
	CorbaSetOverrideTypeAddOverride CorbaSetOverrideType = 1
)

//noinspection GoSnakeCaseUsage
type CorbaSetOverrideType_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaSetOverrideTypeId_Const = "IDL:omg.org/CORBA/SetOverrideType:1.0"

func (self CorbaSetOverrideType_Helper) Id() string {
	return CorbaSetOverrideTypeId_Const
}

func (self CorbaSetOverrideType_Helper) Read(stream __goidl__.IReadAny) (uint32, error) {
	result, err := __goidl__.IdlUInt32Helper.Read(stream)
	return result, err
}

func (self CorbaSetOverrideType_Helper) Write(stream __goidl__.IWriteAny, v uint32) error {
	return __goidl__.IdlUInt32Helper.Write(stream, v)
}

// TypeDef declaration: "CORBA::IndexList", generatedBy by: "WriteTypeDefOfSequenceDcl"
//Typedef Sequence declaration: CORBA::IndexList
type CorbaIndexList []uint16

//noinspection GoSnakeCaseUsage
type CorbaIndexList_Helper struct {
}

//noinspection GoSnakeCaseUsage
const CorbaIndexListId_Const = "IDL:omg.org/CORBA/IndexList:1.0"

func (self CorbaIndexList_Helper) Id() string {
	return CorbaIndexListId_Const
}

// WriteTypeDefOfSequenceDcl::WriteExtract
func (self CorbaIndexList_Helper) Read(stream __goidl__.IReadAny) (CorbaIndexList, error) {
	n, err := __goidl__.IdlUInt32Helper.Read(stream)
	if err != nil {
		return nil, err
	}
	if n > 0 {
		result := make(CorbaIndexList, n)
		var i uint32
		for i = 0; i < n; i++ {
			result[i], err = __goidl__.IdlUInt16Helper.Read(stream)
			if err != nil {
				return nil, err
			}
		}
		return result, nil
	}
	return nil, nil
}

func (self CorbaIndexList_Helper) Write(stream __goidl__.IWriteAny, v CorbaIndexList) error {
	if v == nil {
		return __goidl__.IdlUInt32Helper.Write(stream, 0)
	}
	err := __goidl__.IdlUInt32Helper.Write(stream, uint32(len(v)))
	if err != nil {
		return nil
	}
	for _, item := range v {
			err = __goidl__.IdlUInt16Helper.Write(stream, item)
		if err != nil {
			return err
		}
	}
	return err
}

// Exception declaration: "CORBA::InvalidPolicies", generatedBy by: "WriteStructDcl"
// Exception Decl: true
type CorbaInvalidPolicies struct {
	__goidl__.IdlObject
	Indicies CorbaIndexList `json:"Indicies"`
}

//noinspection GoSnakeCaseUsage
const CorbaInvalidPoliciesId_Const = "IDL:omg.org/CORBA/InvalidPolicies:1.0"

//noinspection GoUnusedExportedFunction
func NewDefaultCorbaInvalidPolicies() *CorbaInvalidPolicies {
	//noinspection GoRedundantConversion
	return &CorbaInvalidPolicies{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaInvalidPoliciesId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "indicies", Type: "CORBA::IndexList" Scope: "IdlTypedef"
		Indicies: CorbaIndexList(nil),
	}
}

//noinspection GoUnusedExportedFunction
func NewCorbaInvalidPolicies(
	//"StructDclAllParamsConstructorParamService"
	Indicies CorbaIndexList) *CorbaInvalidPolicies {
	//noinspection GoRedundantConversion
	return &CorbaInvalidPolicies{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaInvalidPoliciesId_Const,
		},
		Indicies: Indicies,
	}
}

//noinspection GoUnusedExportedFunction
func NewRandomCorbaInvalidPolicies(randomGenerator __goidl__.IRandomDataGenerator) *CorbaInvalidPolicies {
	//noinspection GoRedundantConversion
	return &CorbaInvalidPolicies{
		IdlObject: __goidl__.IdlObject{
			Id: CorbaInvalidPoliciesId_Const,
		},
		// "StructDclDefaultConstructorMemberDefaultValueService", MemberName: "indicies", Type: "CORBA::IndexList" Scope: "IdlTypedef"
		Indicies: CorbaIndexList(nil),
	}
}

func (self *CorbaInvalidPolicies) String() string {
	b, err := __json__.Marshal(self)
	if err != nil {
		return ""
	}
	return string(b)
}

func (self *CorbaInvalidPolicies) Error() string{
	return 	__fmt__.Sprintf("Error of type CorbaInvalidPolicies(%v)", self.String())
}
func (self *CorbaInvalidPolicies) GoString() string {
	return self.String()
}

func (self *CorbaInvalidPolicies) ReadValue(stream __goidl__.IReadAny) error {
	var err error
	err = self.IdlObject.ReadValue(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberExtractValue(IdlSequence)
	self.Indicies, err = CorbaIndexListHelper.Read(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaInvalidPolicies) Read(stream __goidl__.IReadAny) error {
	err := self.ReadValue(stream)
	if err != nil {
		return err
	}
	return nil
}

func (self *CorbaInvalidPolicies) Write(stream __goidl__.IWriteAny) error {
	var err error
	err = self.IdlObject.Write(stream)
	if err != nil {
		return err
	}
	// WriteStructHelper::WriteStructMemberInsert(IdlSequence)
	err = CorbaIndexListHelper.Write(stream, self.Indicies)
	if err != nil {
		return err
	}
	return nil
}

//noinspection GoSnakeCaseUsage
type CorbaInvalidPolicies_Helper struct {
}


//noinspection GoUnusedGlobalVariable
var CorbaPolicyTypeHelper = CorbaPolicyType_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyListHelper = CorbaPolicyList_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyTypeSeqHelper = CorbaPolicyTypeSeq_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyErrorCodeHelper = CorbaPolicyErrorCode_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaPolicyErrorHelper = CorbaPolicyError_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaSetOverrideTypeHelper = CorbaSetOverrideType_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaIndexListHelper = CorbaIndexList_Helper{}

//noinspection GoUnusedGlobalVariable
var CorbaInvalidPoliciesHelper = CorbaInvalidPolicies_Helper{}

func init() {
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CorbaPolicyErrorId_Const,
			__yaccidl__.IdlStruct,
			"CORBA_Policy.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCorbaPolicyError()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCorbaPolicyError(generator)
			},
			__reflect__.TypeOf((*CorbaPolicyError)(nil))))
	__goidl__.AddRegistration(
		__goidl__.NewRegistrationInformation(
			CorbaInvalidPoliciesId_Const,
			__yaccidl__.IdlStruct,
			"CORBA_Policy.idl.go",
			func() __goidl__.IIdlObject {
				return NewDefaultCorbaInvalidPolicies()
			},
			func(generator __goidl__.IRandomDataGenerator) __goidl__.IIdlObject {
				return NewRandomCorbaInvalidPolicies(generator)
			},
			__reflect__.TypeOf((*CorbaInvalidPolicies)(nil))))
}
